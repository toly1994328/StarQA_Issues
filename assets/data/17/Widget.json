[
  {
    "name": "AboutDialog",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An about box. This is a dialog box with the application's icon, name, version number, and copyright, plus a button to show licenses for software used by the application."
  },
  {
    "name": "AboutListTile",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [ListTile] that shows an about box."
  },
  {
    "name": "AbsorbPointer",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that absorbs pointers during hit testing."
  },
  {
    "name": "AbstractLayoutBuilder",
    "path": "/src/widgets/layout_builder.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " An abstract superclass for widgets that defer their building until layout."
  },
  {
    "name": "ActionChip",
    "path": "/src/material/action_chip.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design action chip."
  },
  {
    "name": "ActionIconTheme",
    "path": "/src/material/action_icons_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that overrides the default icon of [BackButtonIcon], [CloseButtonIcon], [DrawerButtonIcon], and [EndDrawerButtonIcon] in this widget's subtree."
  },
  {
    "name": "ActionListener",
    "path": "/src/widgets/actions.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A helper widget for making sure that listeners on an action are removed properly."
  },
  {
    "name": "Actions",
    "path": "/src/widgets/actions.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that maps [Intent]s to [Action]s to be used by its descendants when invoking an [Action]."
  },
  {
    "name": "AdaptiveTextSelectionToolbar",
    "path": "/src/material/adaptive_text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The default context menu for text selection for the current platform."
  },
  {
    "name": "AlertDialog",
    "path": "/src/material/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design alert dialog."
  },
  {
    "name": "Align",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that aligns its child within itself and optionally sizes itself based on the child's size."
  },
  {
    "name": "AlignTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of an [Align] that animates its [Align.alignment] property."
  },
  {
    "name": "AndroidView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Embeds an Android view in the Widget hierarchy."
  },
  {
    "name": "AndroidViewSurface",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Integrates an Android view with Flutter's compositor, touch, and semantics subsystems."
  },
  {
    "name": "AnimatedAlign",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Align] which automatically transitions the child's position over a given duration whenever the given [alignment] changes."
  },
  {
    "name": "AnimatedBuilder",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "ListenableBuilder",
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A general-purpose widget for building animations."
  },
  {
    "name": "AnimatedContainer",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Container] that gradually changes its values over a period of time."
  },
  {
    "name": "AnimatedCrossFade",
    "path": "/src/widgets/animated_cross_fade.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that cross-fades between two given children and animates itself between their sizes."
  },
  {
    "name": "AnimatedDefaultTextStyle",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [DefaultTextStyle] which automatically transitions the default text style (the text style to apply to descendant [Text] widgets without explicit style) over a given duration whenever the given style changes."
  },
  {
    "name": "AnimatedFractionallySizedBox",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [FractionallySizedBox] which automatically transitions the child's size over a given duration whenever the given [widthFactor] or [heightFactor] changes, as well as the position whenever the given [alignment] changes."
  },
  {
    "name": "AnimatedGrid",
    "path": "/src/widgets/animated_scroll_view.dart",
    "parents": [
      "_AnimatedScrollView",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A scrolling container that animates items when they are inserted into or removed from a grid. in a grid."
  },
  {
    "name": "AnimatedIcon",
    "path": "/src/material/animated_icons/animated_icons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Shows an animated icon at a given animation [progress]."
  },
  {
    "name": "AnimatedList",
    "path": "/src/widgets/animated_scroll_view.dart",
    "parents": [
      "_AnimatedScrollView",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A scrolling container that animates items when they are inserted or removed."
  },
  {
    "name": "AnimatedModalBarrier",
    "path": "/src/widgets/modal_barrier.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that prevents the user from interacting with widgets behind itself, and can be configured with an animated color value."
  },
  {
    "name": "AnimatedOpacity",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Opacity] which automatically transitions the child's opacity over a given duration whenever the given opacity changes."
  },
  {
    "name": "AnimatedPadding",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Padding] which automatically transitions the indentation over a given duration whenever the given inset changes."
  },
  {
    "name": "AnimatedPhysicalModel",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [PhysicalModel]."
  },
  {
    "name": "AnimatedPositioned",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Positioned] which automatically transitions the child's position over a given duration whenever the given position changes."
  },
  {
    "name": "AnimatedPositionedDirectional",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [PositionedDirectional] which automatically transitions the child's position over a given duration whenever the given position changes."
  },
  {
    "name": "AnimatedRotation",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Transform.rotate] which automatically transitions the child's rotation over a given duration whenever the given rotation changes."
  },
  {
    "name": "AnimatedScale",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Transform.scale] which automatically transitions the child's scale over a given duration whenever the given scale changes."
  },
  {
    "name": "AnimatedSize",
    "path": "/src/widgets/animated_size.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated widget that automatically transitions its size over a given duration whenever the given child's size changes."
  },
  {
    "name": "AnimatedSlide",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Widget which automatically transitions the child's offset relative to its normal position whenever the given offset changes."
  },
  {
    "name": "AnimatedSwitcher",
    "path": "/src/widgets/animated_switcher.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that by default does a cross-fade between a new widget and the widget previously set on the [AnimatedSwitcher] as a child."
  },
  {
    "name": "AnimatedTheme",
    "path": "/src/material/theme.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Theme] which automatically transitions the colors, etc, over a given duration whenever the given theme changes."
  },
  {
    "name": "AnimatedWidget",
    "path": "/src/widgets/transitions.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that rebuilds when the given [Listenable] changes value."
  },
  {
    "name": "AnnotatedRegion",
    "path": "/src/widgets/annotated_region.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Annotates a region of the layer tree with a value."
  },
  {
    "name": "AppBar",
    "path": "/src/material/app_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design app bar."
  },
  {
    "name": "AppKitView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "_DarwinView",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Widget that contains a macOS AppKit view."
  },
  {
    "name": "AspectRatio",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that attempts to size the child to a specific aspect ratio."
  },
  {
    "name": "Autocomplete",
    "path": "/src/material/autocomplete.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " {@macro flutter.widgets.RawAutocomplete.RawAutocomplete}"
  },
  {
    "name": "AutocompleteHighlightedOption",
    "path": "/src/widgets/autocomplete.dart",
    "parents": [
      "InheritedNotifier",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget used to indicate which autocomplete option should be highlighted for keyboard navigation."
  },
  {
    "name": "AutofillGroup",
    "path": "/src/widgets/autofill.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An [AutofillScope] widget that groups [AutofillClient]s together."
  },
  {
    "name": "AutomaticKeepAlive",
    "path": "/src/widgets/automatic_keep_alive.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Allows subtrees to request to be kept alive in lazy lists."
  },
  {
    "name": "BackButton",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "_ActionButton",
      "IconButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design back icon button."
  },
  {
    "name": "BackButtonIcon",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A \"back\" icon that's appropriate for the current [TargetPlatform]."
  },
  {
    "name": "BackButtonListener",
    "path": "/src/widgets/router.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A convenience widget that registers a callback for when the back button is pressed."
  },
  {
    "name": "BackdropFilter",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that applies a filter to the existing painted content and then paints [child]."
  },
  {
    "name": "BackdropGroup",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that establishes a shared backdrop layer for all child [BackdropFilter] widgets that opt into using it."
  },
  {
    "name": "Badge",
    "path": "/src/material/badge.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design \"badge\"."
  },
  {
    "name": "BadgeTheme",
    "path": "/src/material/badge_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that overrides the default color style, and size parameters for [Badge]s in this widget's subtree."
  },
  {
    "name": "Banner",
    "path": "/src/widgets/banner.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays a diagonal message above the corner of another widget."
  },
  {
    "name": "Baseline",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that positions its child according to the child's baseline."
  },
  {
    "name": "BlockSemantics",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that drops the semantics of all widget that were painted before it in the same semantic container."
  },
  {
    "name": "BottomAppBar",
    "path": "/src/material/bottom_app_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A container that is typically used with [Scaffold.bottomNavigationBar]."
  },
  {
    "name": "BottomNavigationBar",
    "path": "/src/material/bottom_navigation_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A material widget that's displayed at the bottom of an app for selecting among a small number of views, typically between three and five."
  },
  {
    "name": "BottomNavigationBarTheme",
    "path": "/src/material/bottom_navigation_bar_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a bottom navigation bar theme to descendant [BottomNavigationBar] widgets."
  },
  {
    "name": "BottomSheet",
    "path": "/src/material/bottom_sheet.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design bottom sheet."
  },
  {
    "name": "BoxScrollView",
    "path": "/src/widgets/scroll_view.dart",
    "abstract": true,
    "parents": [
      "ScrollView",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [ScrollView] that uses a single child layout model."
  },
  {
    "name": "Builder",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A stateless utility widget whose [build] method uses its [builder] callback to create the widget's child."
  },
  {
    "name": "ButtonBar",
    "path": "/src/material/button_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An end-aligned row of buttons, laying out into a column if there is not enough horizontal space."
  },
  {
    "name": "ButtonBarTheme",
    "path": "/src/material/button_bar_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a button bar theme to descendant [ButtonBar] widgets."
  },
  {
    "name": "ButtonStyleButton",
    "path": "/src/material/button_style_button.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " The base [StatefulWidget] class for buttons whose style is defined by a [ButtonStyle] object."
  },
  {
    "name": "ButtonTheme",
    "path": "/src/material/button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Used with [ButtonThemeData] to configure the color and geometry of buttons."
  },
  {
    "name": "CalendarDatePicker",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays a grid of days for a given month and allows the user to select a date."
  },
  {
    "name": "CallbackShortcuts",
    "path": "/src/widgets/shortcuts.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that binds key combinations to specific callbacks."
  },
  {
    "name": "Card",
    "path": "/src/material/card.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design card: a panel with slightly rounded corners and an elevation shadow."
  },
  {
    "name": "CardTheme",
    "path": "/src/material/card_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Defines default property values for descendant [Card] widgets."
  },
  {
    "name": "CarouselView",
    "path": "/src/material/carousel.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design carousel widget."
  },
  {
    "name": "Center",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "Align",
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that centers its child within itself."
  },
  {
    "name": "Checkbox",
    "path": "/src/material/checkbox.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design checkbox."
  },
  {
    "name": "CheckboxListTile",
    "path": "/src/material/checkbox_list_tile.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [ListTile] with a [Checkbox]. In other words, a checkbox with a label."
  },
  {
    "name": "CheckboxMenuButton",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A menu item that combines a [Checkbox] widget with a [MenuItemButton]."
  },
  {
    "name": "CheckboxTheme",
    "path": "/src/material/checkbox_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a checkbox theme to descendant [Checkbox] widgets."
  },
  {
    "name": "CheckedModeBanner",
    "path": "/src/widgets/banner.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Displays a [Banner] saying \"DEBUG\" when running in debug mode. [MaterialApp] builds one of these by default."
  },
  {
    "name": "CheckedPopupMenuItem",
    "path": "/src/material/popup_menu.dart",
    "parents": [
      "PopupMenuItem",
      "PopupMenuEntry",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An item with a checkmark in a Material Design popup menu."
  },
  {
    "name": "Chip",
    "path": "/src/material/chip.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design chip."
  },
  {
    "name": "ChipTheme",
    "path": "/src/material/chip_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a chip theme to descendant [RawChip]-based widgets, like [Chip], [InputChip], [ChoiceChip], [FilterChip], and [ActionChip]."
  },
  {
    "name": "ChoiceChip",
    "path": "/src/material/choice_chip.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design choice chip."
  },
  {
    "name": "CircleAvatar",
    "path": "/src/material/circle_avatar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A circle that represents a user."
  },
  {
    "name": "CircularProgressIndicator",
    "path": "/src/material/progress_indicator.dart",
    "parents": [
      "ProgressIndicator",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design circular progress indicator, which spins to indicate that the application is busy."
  },
  {
    "name": "ClipOval",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that clips its child using an oval."
  },
  {
    "name": "ClipPath",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that clips its child using a path."
  },
  {
    "name": "ClipRRect",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that clips its child using a rounded rectangle."
  },
  {
    "name": "ClipRSuperellipse",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that clips its child using a rounded superellipse."
  },
  {
    "name": "ClipRect",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that clips its child using a rectangle."
  },
  {
    "name": "CloseButton",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "_ActionButton",
      "IconButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design close icon button."
  },
  {
    "name": "CloseButtonIcon",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A \"close\" icon that's appropriate for the current [TargetPlatform]."
  },
  {
    "name": "ColorFiltered",
    "path": "/src/widgets/color_filter.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Applies a [ColorFilter] to its child."
  },
  {
    "name": "ColoredBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that paints its area with a specified [Color] and then draws its child on top of that color."
  },
  {
    "name": "Column",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "Flex",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that displays its children in a vertical array."
  },
  {
    "name": "CompositedTransformFollower",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that follows a [CompositedTransformTarget]."
  },
  {
    "name": "CompositedTransformTarget",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that can be targeted by a [CompositedTransformFollower]."
  },
  {
    "name": "ConstrainedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that imposes additional constraints on its child."
  },
  {
    "name": "ConstrainedLayoutBuilder",
    "path": "/src/widgets/layout_builder.dart",
    "abstract": true,
    "parents": [
      "AbstractLayoutBuilder",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A specialized [AbstractLayoutBuilder] whose widget subtree depends on the incoming [ConstraintType] that will be imposed on the widget."
  },
  {
    "name": "ConstraintsTransformBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A container widget that applies an arbitrary transform to its constraints, and sizes its child using the resulting [BoxConstraints], optionally clipping, or treating the overflow as an error."
  },
  {
    "name": "Container",
    "path": "/src/widgets/container.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A convenience widget that combines common painting, positioning, and sizing widgets."
  },
  {
    "name": "CupertinoActionSheet",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style action sheet."
  },
  {
    "name": "CupertinoActionSheetAction",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " The content of a typical action button in a [CupertinoActionSheet]."
  },
  {
    "name": "CupertinoActivityIndicator",
    "path": "/src/cupertino/activity_indicator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style activity indicator that spins clockwise."
  },
  {
    "name": "CupertinoAdaptiveTextSelectionToolbar",
    "path": "/src/cupertino/adaptive_text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The default Cupertino context menu for text selection for the current platform with the given children."
  },
  {
    "name": "CupertinoAlertDialog",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style alert dialog."
  },
  {
    "name": "CupertinoApp",
    "path": "/src/cupertino/app.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An application that uses Cupertino design."
  },
  {
    "name": "CupertinoButton",
    "path": "/src/cupertino/button.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style button."
  },
  {
    "name": "CupertinoCheckbox",
    "path": "/src/cupertino/checkbox.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A macOS style checkbox."
  },
  {
    "name": "CupertinoContextMenu",
    "path": "/src/cupertino/context_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A full-screen modal route that opens when the [child] is long-pressed."
  },
  {
    "name": "CupertinoContextMenuAction",
    "path": "/src/cupertino/context_menu_action.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button in a _ContextMenuSheet."
  },
  {
    "name": "CupertinoDatePicker",
    "path": "/src/cupertino/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A date picker widget in iOS style."
  },
  {
    "name": "CupertinoDesktopTextSelectionToolbar",
    "path": "/src/cupertino/desktop_text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A macOS-style text selection toolbar."
  },
  {
    "name": "CupertinoDesktopTextSelectionToolbarButton",
    "path": "/src/cupertino/desktop_text_selection_toolbar_button.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button in the style of the Mac context menu buttons."
  },
  {
    "name": "CupertinoDialogAction",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button typically used in a [CupertinoAlertDialog]."
  },
  {
    "name": "CupertinoFormRow",
    "path": "/src/cupertino/form_row.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An iOS-style form row."
  },
  {
    "name": "CupertinoFormSection",
    "path": "/src/cupertino/form_section.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An iOS-style form section."
  },
  {
    "name": "CupertinoFullscreenDialogTransition",
    "path": "/src/cupertino/route.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style transition used for summoning fullscreen dialogs."
  },
  {
    "name": "CupertinoListSection",
    "path": "/src/cupertino/list_section.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An iOS-style list section."
  },
  {
    "name": "CupertinoListTile",
    "path": "/src/cupertino/list_tile.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style list tile."
  },
  {
    "name": "CupertinoListTileChevron",
    "path": "/src/cupertino/list_tile.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A typical iOS trailing widget used to denote that a `CupertinoListTile` is a button with an action."
  },
  {
    "name": "CupertinoMagnifier",
    "path": "/src/cupertino/magnifier.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [RawMagnifier] used for magnifying text in cases where a user's finger may be blocking the point of interest, like a selection handle."
  },
  {
    "name": "CupertinoNavigationBar",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-styled navigation bar."
  },
  {
    "name": "CupertinoNavigationBarBackButton",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A nav bar back button typically used in [CupertinoNavigationBar]."
  },
  {
    "name": "CupertinoPageScaffold",
    "path": "/src/cupertino/page_scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Implements a single iOS application page's layout."
  },
  {
    "name": "CupertinoPageScaffoldBackgroundColor",
    "path": "/src/cupertino/page_scaffold.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " [InheritedWidget] indicating what the current scaffold background color is for its children."
  },
  {
    "name": "CupertinoPageTransition",
    "path": "/src/cupertino/route.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Provides an iOS-style page transition animation."
  },
  {
    "name": "CupertinoPicker",
    "path": "/src/cupertino/picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-styled picker."
  },
  {
    "name": "CupertinoPickerDefaultSelectionOverlay",
    "path": "/src/cupertino/picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A default selection overlay for [CupertinoPicker]s."
  },
  {
    "name": "CupertinoPopupSurface",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An iOS-style component for creating modal overlays like dialogs and action sheets."
  },
  {
    "name": "CupertinoRadio",
    "path": "/src/cupertino/radio.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A macOS-style radio button."
  },
  {
    "name": "CupertinoScrollbar",
    "path": "/src/cupertino/scrollbar.dart",
    "parents": [
      "RawScrollbar",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS style scrollbar."
  },
  {
    "name": "CupertinoSearchTextField",
    "path": "/src/cupertino/search_field.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [CupertinoTextField] that mimics the look and behavior of UIKit's `UISearchTextField`."
  },
  {
    "name": "CupertinoSegmentedControl",
    "path": "/src/cupertino/segmented_control.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style segmented control."
  },
  {
    "name": "CupertinoSheetTransition",
    "path": "/src/cupertino/sheet.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Provides an iOS-style sheet transition."
  },
  {
    "name": "CupertinoSlider",
    "path": "/src/cupertino/slider.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style slider."
  },
  {
    "name": "CupertinoSlidingSegmentedControl",
    "path": "/src/cupertino/sliding_segmented_control.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS 13 style segmented control."
  },
  {
    "name": "CupertinoSliverNavigationBar",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-styled navigation bar with iOS-11-style large titles using slivers."
  },
  {
    "name": "CupertinoSliverRefreshControl",
    "path": "/src/cupertino/refresh.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A sliver widget implementing the iOS-style pull to refresh content control."
  },
  {
    "name": "CupertinoSpellCheckSuggestionsToolbar",
    "path": "/src/cupertino/spell_check_suggestions_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The default spell check suggestions toolbar for iOS."
  },
  {
    "name": "CupertinoSwitch",
    "path": "/src/cupertino/switch.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style switch."
  },
  {
    "name": "CupertinoTabBar",
    "path": "/src/cupertino/bottom_tab_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An iOS-styled bottom navigation tab bar."
  },
  {
    "name": "CupertinoTabScaffold",
    "path": "/src/cupertino/tab_scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Implements a tabbed iOS application's root layout and behavior structure."
  },
  {
    "name": "CupertinoTabView",
    "path": "/src/cupertino/tab_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A single tab view with its own [Navigator] state and history."
  },
  {
    "name": "CupertinoTextField",
    "path": "/src/cupertino/text_field.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An iOS-style text field."
  },
  {
    "name": "CupertinoTextFormFieldRow",
    "path": "/src/cupertino/text_form_field_row.dart",
    "parents": [
      "FormField",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Creates a [CupertinoFormRow] containing a [FormField] that wraps a [CupertinoTextField]."
  },
  {
    "name": "CupertinoTextMagnifier",
    "path": "/src/cupertino/magnifier.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [CupertinoMagnifier] used for magnifying text in cases where a user's finger may be blocking the point of interest, like a selection handle."
  },
  {
    "name": "CupertinoTextSelectionToolbar",
    "path": "/src/cupertino/text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An iOS-style text selection toolbar."
  },
  {
    "name": "CupertinoTextSelectionToolbarButton",
    "path": "/src/cupertino/text_selection_toolbar_button.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button in the style of the iOS text selection toolbar buttons."
  },
  {
    "name": "CupertinoTheme",
    "path": "/src/cupertino/theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Applies a visual styling theme to descendant Cupertino widgets."
  },
  {
    "name": "CupertinoTimerPicker",
    "path": "/src/cupertino/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A countdown timer picker in iOS style."
  },
  {
    "name": "CupertinoUserInterfaceLevel",
    "path": "/src/cupertino/interface_level.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Establishes a subtree in which [CupertinoUserInterfaceLevel.of] resolves to the given visual elevation from the [CupertinoUserInterfaceLevelData]. This can be used to apply style differences based on a widget's elevation."
  },
  {
    "name": "CustomMultiChildLayout",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that uses a delegate to size and position multiple children."
  },
  {
    "name": "CustomPaint",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that provides a canvas on which to draw during the paint phase."
  },
  {
    "name": "CustomScrollView",
    "path": "/src/widgets/scroll_view.dart",
    "parents": [
      "ScrollView",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [ScrollView] that creates custom scroll effects using [slivers]."
  },
  {
    "name": "CustomSingleChildLayout",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that defers the layout of its single child to a delegate."
  },
  {
    "name": "DataTable",
    "path": "/src/material/data_table.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A data table that follows the [Material 2](https://material.io/go/design-data-tables) design specification."
  },
  {
    "name": "DataTableTheme",
    "path": "/src/material/data_table_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a data table theme to descendant [DataTable] widgets."
  },
  {
    "name": "DatePickerDialog",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material-style date picker dialog."
  },
  {
    "name": "DatePickerTheme",
    "path": "/src/material/date_picker_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the visual properties for [DatePickerDialog]s in this widget's subtree."
  },
  {
    "name": "DateRangePickerDialog",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material-style date range picker dialog."
  },
  {
    "name": "DecoratedBox",
    "path": "/src/widgets/container.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that paints a [Decoration] either before or after its child paints."
  },
  {
    "name": "DecoratedBoxTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of a [DecoratedBox] that animates the different properties of its [Decoration]."
  },
  {
    "name": "DecoratedSliver",
    "path": "/src/widgets/decorated_sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver widget that paints a [Decoration] either before or after its child paints."
  },
  {
    "name": "DefaultAssetBundle",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that determines the default asset bundle for its descendants."
  },
  {
    "name": "DefaultSelectionStyle",
    "path": "/src/widgets/default_selection_style.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " The selection style to apply to descendant [EditableText] widgets which don't have an explicit style."
  },
  {
    "name": "DefaultTabController",
    "path": "/src/material/tab_controller.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " The [TabController] for descendant widgets that don't specify one explicitly."
  },
  {
    "name": "DefaultTextEditingShortcuts",
    "path": "/src/widgets/default_text_editing_shortcuts.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget with the shortcuts used for the default text editing behavior."
  },
  {
    "name": "DefaultTextHeightBehavior",
    "path": "/src/widgets/text.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " The [TextHeightBehavior] that will apply to descendant [Text] and [EditableText] widgets which have not explicitly set [Text.textHeightBehavior]."
  },
  {
    "name": "DefaultTextStyle",
    "path": "/src/widgets/text.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " The text style to apply to descendant [Text] widgets which don't have an explicit style."
  },
  {
    "name": "DefaultTextStyleTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of a [DefaultTextStyle] that animates the different properties of its [TextStyle]."
  },
  {
    "name": "DesktopTextSelectionToolbar",
    "path": "/src/material/desktop_text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material-style desktop text selection toolbar."
  },
  {
    "name": "DesktopTextSelectionToolbarButton",
    "path": "/src/material/desktop_text_selection_toolbar_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [TextButton] for the Material desktop text selection toolbar."
  },
  {
    "name": "Dialog",
    "path": "/src/material/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design dialog."
  },
  {
    "name": "DialogTheme",
    "path": "/src/material/dialog_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Defines a theme for [Dialog] widgets."
  },
  {
    "name": "Directionality",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "_UbiquitousInheritedWidget",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that determines the ambient directionality of text and text-direction-sensitive render objects."
  },
  {
    "name": "Dismissible",
    "path": "/src/widgets/dismissible.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that can be dismissed by dragging in the indicated [direction]."
  },
  {
    "name": "DisplayFeatureSubScreen",
    "path": "/src/widgets/display_feature_sub_screen.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Positions [child] such that it avoids overlapping any [DisplayFeature] that splits the screen into sub-screens."
  },
  {
    "name": "Divider",
    "path": "/src/material/divider.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A thin horizontal line, with padding on either side."
  },
  {
    "name": "DividerTheme",
    "path": "/src/material/divider_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration for [Divider]s, [VerticalDivider]s, dividers between [ListTile]s, and dividers between rows in [DataTable]s in this widget's subtree."
  },
  {
    "name": "DragBoundary",
    "path": "/src/widgets/drag_boundary.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Provides a [DragBoundaryDelegate] for its descendants whose bounds are those defined by this widget."
  },
  {
    "name": "DragTarget",
    "path": "/src/widgets/drag_target.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that receives data when a [Draggable] widget is dropped."
  },
  {
    "name": "Draggable",
    "path": "/src/widgets/drag_target.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that can be dragged from to a [DragTarget]."
  },
  {
    "name": "DraggableScrollableActuator",
    "path": "/src/widgets/draggable_scrollable_sheet.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that can notify a descendent [DraggableScrollableSheet] that it should reset its position to the initial state."
  },
  {
    "name": "DraggableScrollableSheet",
    "path": "/src/widgets/draggable_scrollable_sheet.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A container for a [Scrollable] that responds to drag gestures by resizing the scrollable until a limit is reached, and then scrolling."
  },
  {
    "name": "Drawer",
    "path": "/src/material/drawer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design panel that slides in horizontally from the edge of a [Scaffold] to show navigation links in an application."
  },
  {
    "name": "DrawerButton",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "_ActionButton",
      "IconButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design drawer icon button."
  },
  {
    "name": "DrawerButtonIcon",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A \"drawer\" icon that's appropriate for the current [TargetPlatform]."
  },
  {
    "name": "DrawerController",
    "path": "/src/material/drawer.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Provides interactive behavior for [Drawer] widgets."
  },
  {
    "name": "DrawerHeader",
    "path": "/src/material/drawer_header.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The top-most region of a Material Design drawer. The header's [child] widget, if any, is placed inside a [Container] whose [decoration] can be passed as an argument, inset by the given [padding]."
  },
  {
    "name": "DrawerTheme",
    "path": "/src/material/drawer_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines visual properties for [Drawer]s in this widget's subtree."
  },
  {
    "name": "DropdownButton",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design button for selecting from a list of items."
  },
  {
    "name": "DropdownButtonFormField",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "FormField",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [FormField] that contains a [DropdownButton]."
  },
  {
    "name": "DropdownButtonHideUnderline",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that causes any descendant [DropdownButton] widgets to not include their regular underline."
  },
  {
    "name": "DropdownMenu",
    "path": "/src/material/dropdown_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A dropdown menu that can be opened from a [TextField]. The selected menu item is displayed in that field."
  },
  {
    "name": "DropdownMenuItem",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "_DropdownMenuItemContainer",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An item in a menu created by a [DropdownButton]."
  },
  {
    "name": "DropdownMenuTheme",
    "path": "/src/material/dropdown_menu_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the visual properties for [DropdownMenu]s in this widget's subtree."
  },
  {
    "name": "DualTransitionBuilder",
    "path": "/src/widgets/dual_transition_builder.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A transition builder that animates its [child] based on the [AnimationStatus] of the provided [animation]."
  },
  {
    "name": "EditableText",
    "path": "/src/widgets/editable_text.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A basic text input field."
  },
  {
    "name": "ElevatedButton",
    "path": "/src/material/elevated_button.dart",
    "parents": [
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design \"elevated button\"."
  },
  {
    "name": "ElevatedButtonTheme",
    "path": "/src/material/elevated_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ButtonStyle] of its [ElevatedButton] descendants."
  },
  {
    "name": "EndDrawerButton",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "_ActionButton",
      "IconButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design end drawer icon button."
  },
  {
    "name": "EndDrawerButtonIcon",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A \"end drawer\" icon that's appropriate for the current [TargetPlatform]."
  },
  {
    "name": "ErrorWidget",
    "path": "/src/widgets/framework.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that renders an exception's message."
  },
  {
    "name": "ExcludeFocus",
    "path": "/src/widgets/focus_scope.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that controls whether or not the descendants of this widget are focusable."
  },
  {
    "name": "ExcludeFocusTraversal",
    "path": "/src/widgets/focus_traversal.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that controls whether or not the descendants of this widget are traversable."
  },
  {
    "name": "ExcludeSemantics",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that drops all the semantics of its descendants."
  },
  {
    "name": "ExpandIcon",
    "path": "/src/material/expand_icon.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget representing a rotating expand/collapse button. The icon rotates 180 degrees when pressed, then reverts the animation on a second press. The underlying icon is [Icons.expand_more]."
  },
  {
    "name": "Expanded",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "Flexible",
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that expands a child of a [Row], [Column], or [Flex] so that the child fills the available space."
  },
  {
    "name": "Expansible",
    "path": "/src/widgets/expansible.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [StatefulWidget] that expands and collapses."
  },
  {
    "name": "ExpansionPanelList",
    "path": "/src/material/expansion_panel.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A material expansion panel list that lays out its children and animates expansions."
  },
  {
    "name": "ExpansionTile",
    "path": "/src/material/expansion_tile.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A single-line [ListTile] with an expansion arrow icon that expands or collapses the tile to reveal or hide the [children]."
  },
  {
    "name": "ExpansionTileTheme",
    "path": "/src/material/expansion_tile_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ExpansionTileTheme] of its [ExpansionTile] descendants."
  },
  {
    "name": "FadeInImage",
    "path": "/src/widgets/fade_in_image.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An image that shows a [placeholder] image while the target [image] is loading, then fades in the new image when it loads."
  },
  {
    "name": "FadeTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Animates the opacity of a widget."
  },
  {
    "name": "FilledButton",
    "path": "/src/material/filled_button.dart",
    "parents": [
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design filled button."
  },
  {
    "name": "FilledButtonTheme",
    "path": "/src/material/filled_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ButtonStyle] of its [FilledButton] descendants."
  },
  {
    "name": "FilterChip",
    "path": "/src/material/filter_chip.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design filter chip."
  },
  {
    "name": "FittedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Scales and positions its child within itself according to [fit]."
  },
  {
    "name": "Flex",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that displays its children in a one-dimensional array."
  },
  {
    "name": "Flexible",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that controls how a child of a [Row], [Column], or [Flex] flexes."
  },
  {
    "name": "FlexibleSpaceBar",
    "path": "/src/material/flexible_space_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " The part of a Material Design [AppBar] that expands, collapses, and stretches."
  },
  {
    "name": "FlexibleSpaceBarSettings",
    "path": "/src/material/flexible_space_bar.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Provides sizing and opacity information to a [FlexibleSpaceBar]."
  },
  {
    "name": "FloatingActionButton",
    "path": "/src/material/floating_action_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design floating action button."
  },
  {
    "name": "Flow",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that sizes and positions children efficiently, according to the logic in a [FlowDelegate]."
  },
  {
    "name": "FlutterLogo",
    "path": "/src/widgets/flutter_logo.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The Flutter logo, in widget form. This widget respects the [IconTheme]. For guidelines on using the Flutter logo, visit https://flutter.dev/brand."
  },
  {
    "name": "Focus",
    "path": "/src/widgets/focus_scope.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that manages a [FocusNode] to allow keyboard focus to be given to this widget and its descendants."
  },
  {
    "name": "FocusScope",
    "path": "/src/widgets/focus_scope.dart",
    "parents": [
      "Focus",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [FocusScope] is similar to a [Focus], but also serves as a scope for its descendants, restricting focus traversal to the scoped controls."
  },
  {
    "name": "FocusTraversalGroup",
    "path": "/src/widgets/focus_traversal.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that describes the inherited focus policy for focus traversal for its descendants, grouping them into a separate traversal group."
  },
  {
    "name": "FocusTraversalOrder",
    "path": "/src/widgets/focus_traversal.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that describes the order in which its child subtree should be traversed."
  },
  {
    "name": "FocusableActionDetector",
    "path": "/src/widgets/actions.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that combines the functionality of [Actions], [Shortcuts], [MouseRegion] and a [Focus] widget to create a detector that defines actions and key bindings, and provides callbacks for handling focus and hover highlights."
  },
  {
    "name": "Form",
    "path": "/src/widgets/form.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An optional container for grouping together multiple form field widgets (e.g. [TextField] widgets)."
  },
  {
    "name": "FormField",
    "path": "/src/widgets/form.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A single form field."
  },
  {
    "name": "FractionalTranslation",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Applies a translation transformation before painting its child."
  },
  {
    "name": "FractionallySizedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that sizes its child to a fraction of the total available space. For more details about the layout algorithm, see [RenderFractionallySizedOverflowBox]."
  },
  {
    "name": "FutureBuilder",
    "path": "/src/widgets/async.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that builds itself based on the latest snapshot of interaction with a [Future]."
  },
  {
    "name": "GestureDetector",
    "path": "/src/widgets/gesture_detector.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that detects gestures."
  },
  {
    "name": "GlowingOverscrollIndicator",
    "path": "/src/widgets/overscroll_indicator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A visual indication that a scroll view has overscrolled."
  },
  {
    "name": "GridPaper",
    "path": "/src/widgets/grid_paper.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that draws a rectilinear grid of lines one pixel wide."
  },
  {
    "name": "GridTile",
    "path": "/src/material/grid_tile.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A tile in a Material Design grid list."
  },
  {
    "name": "GridTileBar",
    "path": "/src/material/grid_tile_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A header used in a Material Design [GridTile]."
  },
  {
    "name": "GridView",
    "path": "/src/widgets/scroll_view.dart",
    "parents": [
      "BoxScrollView",
      "ScrollView",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A scrollable, 2D array of widgets."
  },
  {
    "name": "Hero",
    "path": "/src/widgets/heroes.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that marks its child as being a candidate for [hero animations](https://docs.flutter.dev/ui/animations/hero-animations)."
  },
  {
    "name": "HeroControllerScope",
    "path": "/src/widgets/navigator.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget to host a hero controller."
  },
  {
    "name": "HeroMode",
    "path": "/src/widgets/heroes.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Enables or disables [Hero]es in the widget subtree."
  },
  {
    "name": "HtmlElementView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Embeds an HTML element in the Widget hierarchy in Flutter web."
  },
  {
    "name": "Icon",
    "path": "/src/widgets/icon.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A graphical icon widget drawn with a glyph from a font described in an [IconData] such as material's predefined [IconData]s in [Icons]."
  },
  {
    "name": "IconButton",
    "path": "/src/material/icon_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design icon button."
  },
  {
    "name": "IconButtonTheme",
    "path": "/src/material/icon_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ButtonStyle] of its [IconButton] descendants."
  },
  {
    "name": "IconTheme",
    "path": "/src/widgets/icon_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Controls the default properties of icons in a widget subtree."
  },
  {
    "name": "IgnoreBaseline",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that causes the parent to ignore the [child] for the purposes of baseline alignment."
  },
  {
    "name": "IgnorePointer",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that is invisible during hit testing."
  },
  {
    "name": "Image",
    "path": "/src/widgets/image.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that displays an image."
  },
  {
    "name": "ImageFiltered",
    "path": "/src/widgets/image_filter.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Applies an [ImageFilter] to its child."
  },
  {
    "name": "ImageIcon",
    "path": "/src/widgets/image_icon.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An icon that comes from an [ImageProvider], e.g. an [AssetImage]."
  },
  {
    "name": "ImgElementPlatformView",
    "path": "/src/widgets/_web_image_web.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Displays an `<img>` element with `src` set to [src]."
  },
  {
    "name": "ImplicitlyAnimatedWidget",
    "path": "/src/widgets/implicit_animations.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An abstract class for building widgets that animate changes to their properties."
  },
  {
    "name": "IndexedSemantics",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that annotates the child semantics with an index."
  },
  {
    "name": "IndexedStack",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [Stack] that shows a single child from a list of children."
  },
  {
    "name": "InheritedCupertinoTheme",
    "path": "/src/cupertino/theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Provides a [CupertinoTheme] to all descendents."
  },
  {
    "name": "InheritedModel",
    "path": "/src/widgets/inherited_model.dart",
    "abstract": true,
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An [InheritedWidget] that's intended to be used as the base class for models whose dependents may only depend on one part or \"aspect\" of the overall model."
  },
  {
    "name": "InheritedNotifier",
    "path": "/src/widgets/inherited_notifier.dart",
    "abstract": true,
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget for a [Listenable] [notifier], which updates its dependencies when the [notifier] is triggered."
  },
  {
    "name": "InheritedTheme",
    "path": "/src/widgets/inherited_theme.dart",
    "abstract": true,
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An [InheritedWidget] that defines visual properties like colors and text styles, which the [child]'s subtree depends on."
  },
  {
    "name": "InheritedWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Base class for widgets that efficiently propagate information down the tree."
  },
  {
    "name": "Ink",
    "path": "/src/material/ink_decoration.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A convenience widget for drawing images and other decorations on [Material] widgets, so that [InkWell] and [InkResponse] splashes will render over them."
  },
  {
    "name": "InkResponse",
    "path": "/src/material/ink_well.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An area of a [Material] that responds to touch. Has a configurable shape and can be configured to clip splashes that extend outside its bounds or not."
  },
  {
    "name": "InkWell",
    "path": "/src/material/ink_well.dart",
    "parents": [
      "InkResponse",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A rectangular area of a [Material] that responds to touch."
  },
  {
    "name": "InputChip",
    "path": "/src/material/input_chip.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design input chip."
  },
  {
    "name": "InputDatePickerFormField",
    "path": "/src/material/input_date_picker_form_field.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [TextFormField] configured to accept and validate a date entered by a user."
  },
  {
    "name": "InputDecorator",
    "path": "/src/material/input_decorator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Defines the appearance of a Material Design text field."
  },
  {
    "name": "InspectorButton",
    "path": "/src/widgets/widget_inspector.dart",
    "abstract": true,
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An abstract base class for creating Material or Cupertino-styled inspector buttons."
  },
  {
    "name": "InteractiveViewer",
    "path": "/src/widgets/interactive_viewer.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that enables pan and zoom interactions with its child."
  },
  {
    "name": "IntrinsicHeight",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that sizes its child to the child's intrinsic height."
  },
  {
    "name": "IntrinsicWidth",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that sizes its child to the child's maximum intrinsic width."
  },
  {
    "name": "KeepAlive",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Mark a child as needing to stay alive even when it's in a lazy list that would otherwise remove it."
  },
  {
    "name": "KeyboardListener",
    "path": "/src/widgets/keyboard_listener.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that calls a callback whenever the user presses or releases a key on a keyboard."
  },
  {
    "name": "KeyedSubtree",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that builds its child."
  },
  {
    "name": "LayoutBuilder",
    "path": "/src/widgets/layout_builder.dart",
    "parents": [
      "ConstrainedLayoutBuilder",
      "AbstractLayoutBuilder",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Builds a widget tree that can depend on the parent widget's size."
  },
  {
    "name": "LayoutId",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Metadata for identifying children in a [CustomMultiChildLayout]."
  },
  {
    "name": "LeafRenderObjectWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A superclass for [RenderObjectWidget]s that configure [RenderObject] subclasses that have no children."
  },
  {
    "name": "LicensePage",
    "path": "/src/material/about.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A page that shows licenses for software used by the application."
  },
  {
    "name": "LimitedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A box that limits its size only when it's unconstrained."
  },
  {
    "name": "LinearProgressIndicator",
    "path": "/src/material/progress_indicator.dart",
    "parents": [
      "ProgressIndicator",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design linear progress indicator, also known as a progress bar."
  },
  {
    "name": "ListBody",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that arranges its children sequentially along a given axis, forcing them to the dimension of the parent in the other axis."
  },
  {
    "name": "ListTile",
    "path": "/src/material/list_tile.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A single fixed-height row that typically contains some text as well as a leading or trailing icon."
  },
  {
    "name": "ListTileTheme",
    "path": "/src/material/list_tile_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines color and style parameters for [ListTile]s in this widget's subtree."
  },
  {
    "name": "ListView",
    "path": "/src/widgets/scroll_view.dart",
    "parents": [
      "BoxScrollView",
      "ScrollView",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A scrollable list of widgets arranged linearly."
  },
  {
    "name": "ListWheelScrollView",
    "path": "/src/widgets/list_wheel_scroll_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A box in which children on a wheel can be scrolled."
  },
  {
    "name": "ListWheelViewport",
    "path": "/src/widgets/list_wheel_scroll_view.dart",
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A viewport showing a subset of children on a wheel."
  },
  {
    "name": "ListenableBuilder",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A general-purpose widget for building a widget subtree when a [Listenable] changes."
  },
  {
    "name": "Listener",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that calls callbacks in response to common pointer events."
  },
  {
    "name": "Localizations",
    "path": "/src/widgets/localizations.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Defines the [Locale] for its `child` and the localized resources that the child depends on."
  },
  {
    "name": "LongPressDraggable",
    "path": "/src/widgets/drag_target.dart",
    "parents": [
      "Draggable",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Makes its child draggable starting from long press."
  },
  {
    "name": "LookupBoundary",
    "path": "/src/widgets/lookup_boundary.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A lookup boundary controls what entities are visible to descendants of the boundary via the static lookup methods provided by the boundary."
  },
  {
    "name": "Magnifier",
    "path": "/src/material/magnifier.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material-styled magnifying glass."
  },
  {
    "name": "Material",
    "path": "/src/material/material.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A piece of material."
  },
  {
    "name": "MaterialApp",
    "path": "/src/material/app.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An application that uses Material Design."
  },
  {
    "name": "MaterialBanner",
    "path": "/src/material/banner.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design banner."
  },
  {
    "name": "MaterialBannerTheme",
    "path": "/src/material/banner_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration for [MaterialBanner]s in this widget's subtree."
  },
  {
    "name": "MaterialButton",
    "path": "/src/material/material_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A utility class for building Material buttons that depend on the ambient [ButtonTheme] and [Theme]."
  },
  {
    "name": "MatrixTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animates the [Matrix4] of a transformed widget."
  },
  {
    "name": "MediaQuery",
    "path": "/src/widgets/media_query.dart",
    "parents": [
      "InheritedModel",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Establishes a subtree in which media queries resolve to the given data."
  },
  {
    "name": "MenuAcceleratorCallbackBinding",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An [InheritedWidget] that provides a descendant [MenuAcceleratorLabel] with the function to invoke when the accelerator is pressed."
  },
  {
    "name": "MenuAcceleratorLabel",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that draws the label text for a menu item (typically a [MenuItemButton] or [SubmenuButton]) and renders its child with information about the currently active keyboard accelerator."
  },
  {
    "name": "MenuAnchor",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget used to mark the \"anchor\" for a set of submenus, defining the rectangle used to position the menu, which can be done either with an explicit location, or with an alignment."
  },
  {
    "name": "MenuBar",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A menu bar that manages cascading child menus."
  },
  {
    "name": "MenuBarTheme",
    "path": "/src/material/menu_bar_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration for the [MenuBar] widgets in this widget's descendants."
  },
  {
    "name": "MenuButtonTheme",
    "path": "/src/material/menu_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ButtonStyle] of its [MenuItemButton] and [SubmenuButton] descendants."
  },
  {
    "name": "MenuItemButton",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button for use in a [MenuBar], in a menu created with [MenuAnchor], or on its own, that can be activated by click or keyboard navigation."
  },
  {
    "name": "MenuTheme",
    "path": "/src/material/menu_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration in this widget's descendants for menus created by the [SubmenuButton], [MenuBar], or [MenuAnchor] widgets."
  },
  {
    "name": "MergeSemantics",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that merges the semantics of its descendants."
  },
  {
    "name": "MergeableMaterial",
    "path": "/src/material/mergeable_material.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays a list of [MergeableMaterialItem] children. The list contains [MaterialSlice] items whose boundaries are either \"merged\" with adjacent items or separated by a [MaterialGap]. The [children] are distributed along the given [mainAxis] in the same way as the children of a [ListBody]. When the list of children changes, gaps are automatically animated open or closed as needed."
  },
  {
    "name": "MetaData",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Holds opaque meta data in the render tree."
  },
  {
    "name": "ModalBarrier",
    "path": "/src/widgets/modal_barrier.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that prevents the user from interacting with widgets behind itself."
  },
  {
    "name": "MouseRegion",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that tracks the movement of mice."
  },
  {
    "name": "MultiChildRenderObjectWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A superclass for [RenderObjectWidget]s that configure [RenderObject] subclasses that have a single list of children. (This superclass only provides the storage for that child list, it doesn't actually provide the updating logic.)"
  },
  {
    "name": "NavigationBar",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Material 3 Navigation Bar component."
  },
  {
    "name": "NavigationBarTheme",
    "path": "/src/material/navigation_bar_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines visual properties for [NavigationBar]s and [NavigationDestination]s in this widget's subtree."
  },
  {
    "name": "NavigationDestination",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material 3 [NavigationBar] destination."
  },
  {
    "name": "NavigationDrawer",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Material Design Navigation Drawer component."
  },
  {
    "name": "NavigationDrawerDestination",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design [NavigationDrawer] destination."
  },
  {
    "name": "NavigationDrawerTheme",
    "path": "/src/material/navigation_drawer_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines visual properties for [NavigationDrawer]s and [NavigationDestination]s in this widget's subtree."
  },
  {
    "name": "NavigationIndicator",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Selection Indicator for the Material 3 [NavigationBar] and [NavigationRail] components."
  },
  {
    "name": "NavigationRail",
    "path": "/src/material/navigation_rail.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design widget that is meant to be displayed at the left or right of an app to navigate between a small number of views, typically between three and five."
  },
  {
    "name": "NavigationRailTheme",
    "path": "/src/material/navigation_rail_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines visual properties for [NavigationRail]s and [NavigationRailDestination]s in this widget's subtree."
  },
  {
    "name": "NavigationToolbar",
    "path": "/src/widgets/navigation_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " [NavigationToolbar] is a layout helper to position 3 widgets or groups of widgets along a horizontal axis that's sensible for an application's navigation bar such as in Material Design and in iOS."
  },
  {
    "name": "Navigator",
    "path": "/src/widgets/navigator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that manages a set of child widgets with a stack discipline."
  },
  {
    "name": "NavigatorPopHandler",
    "path": "/src/widgets/navigator_pop_handler.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Enables the handling of system back gestures."
  },
  {
    "name": "NestedScrollView",
    "path": "/src/widgets/nested_scroll_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A scrolling view inside of which can be nested other scrolling views, with their scroll positions being intrinsically linked."
  },
  {
    "name": "NestedScrollViewViewport",
    "path": "/src/widgets/nested_scroll_view.dart",
    "parents": [
      "Viewport",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " The [Viewport] variant used by [NestedScrollView]."
  },
  {
    "name": "NotificationListener",
    "path": "/src/widgets/notification_listener.dart",
    "parents": [
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that listens for [Notification]s bubbling up the tree."
  },
  {
    "name": "ObstructingPreferredSizeWidget",
    "path": "/src/cupertino/page_scaffold.dart",
    "abstract": true,
    "parents": [
      "Object",
      "PreferredSizeWidget",
      "Widget"
    ],
    "desc": " Widget that has a preferred size and reports whether it fully obstructs widgets behind it."
  },
  {
    "name": "Offstage",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that lays the child out as if it was in the tree, but without painting anything, without making the child available for hit testing, and without taking any room in the parent."
  },
  {
    "name": "Opacity",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that makes its child partially transparent."
  },
  {
    "name": "OrientationBuilder",
    "path": "/src/widgets/orientation_builder.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Builds a widget tree that can depend on the parent widget's orientation (distinct from the device orientation)."
  },
  {
    "name": "OutlinedButton",
    "path": "/src/material/outlined_button.dart",
    "parents": [
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design \"Outlined Button\"; essentially a [TextButton] with an outlined border."
  },
  {
    "name": "OutlinedButtonTheme",
    "path": "/src/material/outlined_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ButtonStyle] of its [OutlinedButton] descendants."
  },
  {
    "name": "OverflowBar",
    "path": "/src/widgets/overflow_bar.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that lays out its [children] in a row unless they \"overflow\" the available horizontal space, in which case it lays them out in a column instead."
  },
  {
    "name": "OverflowBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that imposes different constraints on its child than it gets from its parent, possibly allowing the child to overflow the parent."
  },
  {
    "name": "Overlay",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A stack of entries that can be managed independently."
  },
  {
    "name": "OverlayPortal",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that renders its overlay child on an [Overlay]."
  },
  {
    "name": "Padding",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that insets its child by the given padding."
  },
  {
    "name": "PageStorage",
    "path": "/src/widgets/page_storage.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Establish a subtree in which widgets can opt into persisting states after being destroyed."
  },
  {
    "name": "PageView",
    "path": "/src/widgets/page_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A scrollable list that works page by page."
  },
  {
    "name": "PaginatedDataTable",
    "path": "/src/material/paginated_data_table.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A table that follows the [Material 2](https://material.io/go/design-data-tables) design specification, using multiple pages to display data."
  },
  {
    "name": "ParentDataWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Base class for widgets that hook [ParentData] information to children of [RenderObjectWidget]s."
  },
  {
    "name": "PerformanceOverlay",
    "path": "/src/widgets/performance_overlay.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Displays performance statistics."
  },
  {
    "name": "PhysicalModel",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget representing a physical layer that clips its children to a shape."
  },
  {
    "name": "PhysicalShape",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget representing a physical layer that clips its children to a path."
  },
  {
    "name": "PinnedHeaderSliver",
    "path": "/src/widgets/pinned_header_sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that keeps its Widget child at the top of the a [CustomScrollView]."
  },
  {
    "name": "Placeholder",
    "path": "/src/widgets/placeholder.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that draws a box that represents where other widgets will one day be added."
  },
  {
    "name": "PlatformMenuBar",
    "path": "/src/widgets/platform_menu_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A menu bar that uses the platform's native APIs to construct and render a menu described by a [PlatformMenu]/[PlatformMenuItem] hierarchy."
  },
  {
    "name": "PlatformSelectableRegionContextMenu",
    "path": "/src/widgets/_platform_selectable_region_context_menu_io.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that provides native selection context menu for its child subtree."
  },
  {
    "name": "PlatformSelectableRegionContextMenu",
    "path": "/src/widgets/_platform_selectable_region_context_menu_web.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " See `_platform_selectable_region_context_menu_io.dart` for full documentation."
  },
  {
    "name": "PlatformViewLink",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Links a platform view with the Flutter framework."
  },
  {
    "name": "PlatformViewSurface",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Integrates a platform view with Flutter's compositor, touch, and semantics subsystems."
  },
  {
    "name": "PopScope",
    "path": "/src/widgets/pop_scope.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Manages back navigation gestures."
  },
  {
    "name": "PopupMenuButton",
    "path": "/src/material/popup_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays a menu when pressed and calls [onSelected] when the menu is dismissed because an item was selected. The value passed to [onSelected] is the value of the selected menu item."
  },
  {
    "name": "PopupMenuDivider",
    "path": "/src/material/popup_menu.dart",
    "parents": [
      "PopupMenuEntry",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A horizontal divider in a Material Design popup menu."
  },
  {
    "name": "PopupMenuEntry",
    "path": "/src/material/popup_menu.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A base class for entries in a Material Design popup menu."
  },
  {
    "name": "PopupMenuItem",
    "path": "/src/material/popup_menu.dart",
    "parents": [
      "PopupMenuEntry",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An item in a Material Design popup menu."
  },
  {
    "name": "PopupMenuTheme",
    "path": "/src/material/popup_menu_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration for popup menus in this widget's subtree."
  },
  {
    "name": "Positioned",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " A widget that controls where a child of a [Stack] is positioned."
  },
  {
    "name": "PositionedDirectional",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that controls where a child of a [Stack] is positioned without committing to a specific [TextDirection]."
  },
  {
    "name": "PositionedTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Positioned] which takes a specific [Animation<RelativeRect>] to transition the child's position from a start position to an end position over the lifetime of the animation."
  },
  {
    "name": "PreferredSize",
    "path": "/src/widgets/preferred_size.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget with a preferred size."
  },
  {
    "name": "PreferredSizeWidget",
    "path": "/src/widgets/preferred_size.dart",
    "abstract": true,
    "parents": [
      "Object",
      "Widget"
    ],
    "desc": " An interface for widgets that can return the size this widget would prefer if it were otherwise unconstrained."
  },
  {
    "name": "PrimaryScrollController",
    "path": "/src/widgets/primary_scroll_controller.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Associates a [ScrollController] with a subtree."
  },
  {
    "name": "ProgressIndicator",
    "path": "/src/material/progress_indicator.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A base class for Material Design progress indicators."
  },
  {
    "name": "ProgressIndicatorTheme",
    "path": "/src/material/progress_indicator_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration for [ProgressIndicator]s in this widget's subtree."
  },
  {
    "name": "ProxyWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "Widget"
    ],
    "desc": " A widget that has a child widget provided to it, instead of building a new widget."
  },
  {
    "name": "Radio",
    "path": "/src/material/radio.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design radio button."
  },
  {
    "name": "RadioListTile",
    "path": "/src/material/radio_list_tile.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [ListTile] with a [Radio]. In other words, a radio button with a label."
  },
  {
    "name": "RadioMenuButton",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A menu item that combines a [Radio] widget with a [MenuItemButton]."
  },
  {
    "name": "RadioTheme",
    "path": "/src/material/radio_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a radio theme to descendant [Radio] widgets."
  },
  {
    "name": "RangeSlider",
    "path": "/src/material/range_slider.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design range slider."
  },
  {
    "name": "RawAutocomplete",
    "path": "/src/widgets/autocomplete.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " {@template flutter.widgets.RawAutocomplete.RawAutocomplete} A widget for helping the user make a selection by entering some text and choosing from among a list of options."
  },
  {
    "name": "RawChip",
    "path": "/src/material/chip.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A raw Material Design chip."
  },
  {
    "name": "RawGestureDetector",
    "path": "/src/widgets/gesture_detector.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that detects gestures described by the given gesture factories."
  },
  {
    "name": "RawImage",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that displays a [dart:ui.Image] directly."
  },
  {
    "name": "RawKeyboardListener",
    "path": "/src/widgets/raw_keyboard_listener.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that calls a callback whenever the user presses or releases a key on a keyboard."
  },
  {
    "name": "RawMagnifier",
    "path": "/src/widgets/magnifier.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A common base class for magnifiers."
  },
  {
    "name": "RawMaterialButton",
    "path": "/src/material/button.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Creates a button based on [Semantics], [Material], and [InkWell] widgets."
  },
  {
    "name": "RawMenuAnchor",
    "path": "/src/widgets/raw_menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that wraps a child and anchors a floating menu."
  },
  {
    "name": "RawMenuAnchorGroup",
    "path": "/src/widgets/raw_menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Creates a menu anchor that is always visible and is not displayed in an [OverlayPortal]."
  },
  {
    "name": "RawScrollbar",
    "path": "/src/widgets/scrollbar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An extendable base class for building scrollbars that fade in and out."
  },
  {
    "name": "RawView",
    "path": "/src/widgets/view.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The lower level workhorse widget for [View] that bootstraps a render tree for a view."
  },
  {
    "name": "RawWebImage",
    "path": "/src/widgets/_web_image_io.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [Widget] that displays an image that is backed by an HTML element."
  },
  {
    "name": "RawWebImage",
    "path": "/src/widgets/_web_image_web.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget which displays and lays out an underlying HTML element in a platform view."
  },
  {
    "name": "RefreshIndicator",
    "path": "/src/material/refresh_indicator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that supports the Material \"swipe to refresh\" idiom."
  },
  {
    "name": "RefreshProgressIndicator",
    "path": "/src/material/progress_indicator.dart",
    "parents": [
      "CircularProgressIndicator",
      "ProgressIndicator",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " An indicator for the progress of refreshing the contents of a widget."
  },
  {
    "name": "RelativePositionedTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [Positioned] which transitions the child's position based on the value of [rect] relative to a bounding box with the specified [size]."
  },
  {
    "name": "RenderObjectToWidgetAdapter",
    "path": "/src/widgets/adapter.dart",
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A bridge from a [RenderObject] to an [Element] tree."
  },
  {
    "name": "RenderObjectWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "Widget"
    ],
    "desc": " [RenderObjectWidget]s provide the configuration for [RenderObjectElement]s, which wrap [RenderObject]s, which provide the actual rendering of the application."
  },
  {
    "name": "ReorderableDelayedDragStartListener",
    "path": "/src/widgets/reorderable_list.dart",
    "parents": [
      "ReorderableDragStartListener",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A wrapper widget that will recognize the start of a drag operation by looking for a long press event. Once it is recognized, it will start a drag operation on the wrapped item in the reorderable list."
  },
  {
    "name": "ReorderableDragStartListener",
    "path": "/src/widgets/reorderable_list.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A wrapper widget that will recognize the start of a drag on the wrapped widget by a [PointerDownEvent], and immediately initiate dragging the wrapped item to a new location in a reorderable list."
  },
  {
    "name": "ReorderableList",
    "path": "/src/widgets/reorderable_list.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A scrolling container that allows the user to interactively reorder the list items."
  },
  {
    "name": "ReorderableListView",
    "path": "/src/material/reorderable_list.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A list whose items the user can interactively reorder by dragging."
  },
  {
    "name": "RepaintBoundary",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that creates a separate display list for its child."
  },
  {
    "name": "RestorationScope",
    "path": "/src/widgets/restoration.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Creates a new scope for restoration IDs used by descendant widgets to claim [RestorationBucket]s."
  },
  {
    "name": "RichText",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A paragraph of rich text."
  },
  {
    "name": "RootRestorationScope",
    "path": "/src/widgets/restoration.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Inserts a child bucket of [RestorationManager.rootBucket] into the widget tree and makes it available to descendants via [RestorationScope.of]."
  },
  {
    "name": "RootWidget",
    "path": "/src/widgets/binding.dart",
    "parents": [
      "Widget"
    ],
    "desc": " A widget for the root of the widget tree."
  },
  {
    "name": "RotatedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that rotates its child by a integral number of quarter turns."
  },
  {
    "name": "RotationTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "MatrixTransition",
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animates the rotation of a widget."
  },
  {
    "name": "Router",
    "path": "/src/widgets/router.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " The dispatcher for opening and closing pages of an application."
  },
  {
    "name": "Row",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "Flex",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that displays its children in a horizontal array."
  },
  {
    "name": "SafeArea",
    "path": "/src/widgets/safe_area.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that insets its child with sufficient padding to avoid intrusions by the operating system."
  },
  {
    "name": "Scaffold",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Implements the basic Material Design visual layout structure."
  },
  {
    "name": "ScaffoldMessenger",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Manages [SnackBar]s and [MaterialBanner]s for descendant [Scaffold]s."
  },
  {
    "name": "ScaleTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "MatrixTransition",
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animates the scale of a transformed widget."
  },
  {
    "name": "ScrollConfiguration",
    "path": "/src/widgets/scroll_configuration.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Controls how [Scrollable] widgets behave in a subtree."
  },
  {
    "name": "ScrollNotificationObserver",
    "path": "/src/widgets/scroll_notification_observer.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Notifies its listeners when a descendant scrolls."
  },
  {
    "name": "ScrollView",
    "path": "/src/widgets/scroll_view.dart",
    "abstract": true,
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that combines a [Scrollable] and a [Viewport] to create an interactive scrolling pane of content in one dimension."
  },
  {
    "name": "Scrollable",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that manages scrolling in one dimension and informs the [Viewport] through which the content is viewed."
  },
  {
    "name": "Scrollbar",
    "path": "/src/material/scrollbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design scrollbar."
  },
  {
    "name": "ScrollbarTheme",
    "path": "/src/material/scrollbar_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a scrollbar theme to descendant [Scrollbar] widgets."
  },
  {
    "name": "SearchAnchor",
    "path": "/src/material/search_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Manages a \"search view\" route that allows the user to select one of the suggested completions for a search query."
  },
  {
    "name": "SearchBar",
    "path": "/src/material/search_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design search bar."
  },
  {
    "name": "SearchBarTheme",
    "path": "/src/material/search_bar_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a search bar theme to descendant [SearchBar] widgets."
  },
  {
    "name": "SearchViewTheme",
    "path": "/src/material/search_view_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration in this widget's descendants for search view created by the [SearchAnchor] widget."
  },
  {
    "name": "SegmentedButton",
    "path": "/src/material/segmented_button.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material button that allows the user to select from limited set of options."
  },
  {
    "name": "SegmentedButtonTheme",
    "path": "/src/material/segmented_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the visual properties for [SegmentedButton]s in this widget's subtree."
  },
  {
    "name": "SelectableRegion",
    "path": "/src/widgets/selectable_region.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that introduces an area for user selections."
  },
  {
    "name": "SelectableRegionSelectionStatusScope",
    "path": "/src/widgets/selectable_region.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Notifies its listeners when the selection under a [SelectableRegion] or [SelectionArea] is being changed or finalized."
  },
  {
    "name": "SelectableText",
    "path": "/src/material/selectable_text.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A run of selectable text with a single style."
  },
  {
    "name": "SelectionArea",
    "path": "/src/material/selection_area.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that introduces an area for user selections with adaptive selection controls."
  },
  {
    "name": "SelectionContainer",
    "path": "/src/widgets/selection_container.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A container that handles [SelectionEvent]s for the [Selectable]s in the subtree."
  },
  {
    "name": "SelectionListener",
    "path": "/src/widgets/selectable_region.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [SelectionContainer] that allows the user to access the [SelectionDetails] and listen to selection changes for the child subtree it wraps under a [SelectionArea] or [SelectableRegion]."
  },
  {
    "name": "SelectionRegistrarScope",
    "path": "/src/widgets/selection_container.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget to host a [SelectionRegistrar] for the subtree."
  },
  {
    "name": "Semantics",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that annotates the widget tree with a description of the meaning of the widgets."
  },
  {
    "name": "SemanticsDebugger",
    "path": "/src/widgets/semantics_debugger.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that visualizes the semantics for the child."
  },
  {
    "name": "ShaderMask",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that applies a mask generated by a [Shader] to its child."
  },
  {
    "name": "SharedAppData",
    "path": "/src/widgets/shared_app_data.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Enables sharing key/value data with its `child` and all of the child's descendants."
  },
  {
    "name": "ShortcutRegistrar",
    "path": "/src/widgets/shortcuts.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that holds a [ShortcutRegistry] which allows descendants to add, remove, or replace shortcuts."
  },
  {
    "name": "Shortcuts",
    "path": "/src/widgets/shortcuts.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that creates key bindings to specific actions for its descendants."
  },
  {
    "name": "ShrinkWrappingViewport",
    "path": "/src/widgets/viewport.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that is bigger on the inside and shrink wraps its children in the main axis."
  },
  {
    "name": "SimpleDialog",
    "path": "/src/material/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A simple Material Design dialog."
  },
  {
    "name": "SimpleDialogOption",
    "path": "/src/material/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " An option used in a [SimpleDialog]."
  },
  {
    "name": "SingleChildRenderObjectWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A superclass for [RenderObjectWidget]s that configure [RenderObject] subclasses that have a single child slot."
  },
  {
    "name": "SingleChildScrollView",
    "path": "/src/widgets/single_child_scroll_view.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A box in which a single widget can be scrolled."
  },
  {
    "name": "SizeChangedLayoutNotifier",
    "path": "/src/widgets/size_changed_layout_notifier.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that automatically dispatches a [SizeChangedLayoutNotification] when the layout dimensions of its child change."
  },
  {
    "name": "SizeTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animates its own size and clips and aligns its child."
  },
  {
    "name": "SizedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A box with a specified size."
  },
  {
    "name": "SizedOverflowBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that is a specific size but passes its original constraints through to its child, which may then overflow."
  },
  {
    "name": "SlideTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animates the position of a widget relative to its normal position."
  },
  {
    "name": "Slider",
    "path": "/src/material/slider.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design slider."
  },
  {
    "name": "SliderTheme",
    "path": "/src/material/slider_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a slider theme to descendant [Slider] widgets."
  },
  {
    "name": "SliverAnimatedGrid",
    "path": "/src/widgets/animated_scroll_view.dart",
    "parents": [
      "_SliverAnimatedMultiBoxAdaptor",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [SliverGrid] that animates items when they are inserted or removed."
  },
  {
    "name": "SliverAnimatedList",
    "path": "/src/widgets/animated_scroll_view.dart",
    "parents": [
      "_SliverAnimatedMultiBoxAdaptor",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [SliverList] that animates items when they are inserted or removed."
  },
  {
    "name": "SliverAnimatedOpacity",
    "path": "/src/widgets/implicit_animations.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Animated version of [SliverOpacity] which automatically transitions the sliver child's opacity over a given duration whenever the given opacity changes."
  },
  {
    "name": "SliverAppBar",
    "path": "/src/material/app_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design app bar that integrates with a [CustomScrollView]."
  },
  {
    "name": "SliverConstrainedCrossAxis",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A sliver that constrains the cross axis extent of its sliver child."
  },
  {
    "name": "SliverCrossAxisExpanded",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Set a flex factor for allocating space in the cross axis direction."
  },
  {
    "name": "SliverCrossAxisGroup",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places multiple sliver children in a linear array along the cross axis."
  },
  {
    "name": "SliverEnsureSemantics",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that ensures its sliver child is included in the semantics tree."
  },
  {
    "name": "SliverFadeTransition",
    "path": "/src/widgets/transitions.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Animates the opacity of a sliver widget."
  },
  {
    "name": "SliverFillRemaining",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A sliver that contains a single box child that fills the remaining space in the viewport."
  },
  {
    "name": "SliverFillViewport",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A sliver that contains multiple box children that each fills the viewport."
  },
  {
    "name": "SliverFixedExtentList",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places multiple box children with the same main axis extent in a linear array."
  },
  {
    "name": "SliverFloatingHeader",
    "path": "/src/widgets/sliver_floating_header.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A sliver that shows its [child] when the user scrolls forward and hides it when the user scrolls backwards."
  },
  {
    "name": "SliverGrid",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places multiple box children in a two dimensional arrangement."
  },
  {
    "name": "SliverIgnorePointer",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver widget that is invisible during hit testing."
  },
  {
    "name": "SliverLayoutBuilder",
    "path": "/src/widgets/sliver_layout_builder.dart",
    "parents": [
      "ConstrainedLayoutBuilder",
      "AbstractLayoutBuilder",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Builds a sliver widget tree that can depend on its own [SliverConstraints]."
  },
  {
    "name": "SliverList",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places multiple box children in a linear array along the main axis."
  },
  {
    "name": "SliverMainAxisGroup",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places multiple sliver children in a linear array along the main axis, one after another."
  },
  {
    "name": "SliverMultiBoxAdaptorWidget",
    "path": "/src/widgets/sliver.dart",
    "abstract": true,
    "parents": [
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A base class for slivers that have multiple box children."
  },
  {
    "name": "SliverOffstage",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that lays its sliver child out as if it was in the tree, but without painting anything, without making the sliver child available for hit testing, and without taking any room in the parent."
  },
  {
    "name": "SliverOpacity",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver widget that makes its sliver child partially transparent."
  },
  {
    "name": "SliverOverlapAbsorber",
    "path": "/src/widgets/nested_scroll_view.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that wraps another, forcing its layout extent to be treated as overlap."
  },
  {
    "name": "SliverOverlapInjector",
    "path": "/src/widgets/nested_scroll_view.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that has a sliver geometry based on the values stored in a [SliverOverlapAbsorberHandle]."
  },
  {
    "name": "SliverPadding",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that applies padding on each side of another sliver."
  },
  {
    "name": "SliverPersistentHeader",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A sliver whose size varies when the sliver is scrolled to the edge of the viewport opposite the sliver's [GrowthDirection]."
  },
  {
    "name": "SliverPrototypeExtentList",
    "path": "/src/widgets/sliver_prototype_extent_list.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places its box children in a linear array and constrains them to have the same extent as a prototype item along the main axis."
  },
  {
    "name": "SliverReorderableList",
    "path": "/src/widgets/reorderable_list.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A sliver list that allows the user to interactively reorder the list items."
  },
  {
    "name": "SliverResizingHeader",
    "path": "/src/widgets/sliver_resizing_header.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A sliver that is pinned to the start of its [CustomScrollView] and reacts to scrolling by resizing between the intrinsic sizes of its min and max extent prototypes."
  },
  {
    "name": "SliverSafeArea",
    "path": "/src/widgets/safe_area.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A sliver that insets another sliver by sufficient padding to avoid intrusions by the operating system."
  },
  {
    "name": "SliverToBoxAdapter",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that contains a single box widget."
  },
  {
    "name": "SliverVariedExtentList",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that places its box children in a linear array and constrains them to have the corresponding extent returned by [itemExtentBuilder]."
  },
  {
    "name": "SliverVisibility",
    "path": "/src/widgets/visibility.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Whether to show or hide a sliver child."
  },
  {
    "name": "SliverWithKeepAliveWidget",
    "path": "/src/widgets/sliver.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A base class for slivers that have [KeepAlive] children."
  },
  {
    "name": "SlottedMultiChildRenderObjectWidget",
    "path": "/src/widgets/slotted_render_object_widget.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A superclass for [RenderObjectWidget]s that configure [RenderObject] subclasses that organize their children in different slots."
  },
  {
    "name": "SnackBar",
    "path": "/src/material/snack_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A lightweight message with an optional action which briefly displays at the bottom of the screen."
  },
  {
    "name": "SnackBarAction",
    "path": "/src/material/snack_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button for a [SnackBar], known as an \"action\"."
  },
  {
    "name": "SnapshotWidget",
    "path": "/src/widgets/snapshot_widget.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that can replace its child with a snapshotted version of the child."
  },
  {
    "name": "Spacer",
    "path": "/src/widgets/spacer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Spacer creates an adjustable, empty spacer that can be used to tune the spacing between widgets in a [Flex] container, like [Row] or [Column]."
  },
  {
    "name": "SpellCheckSuggestionsToolbar",
    "path": "/src/material/spell_check_suggestions_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The default spell check suggestions toolbar for Android."
  },
  {
    "name": "Stack",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that positions its children relative to the edges of its box."
  },
  {
    "name": "StatefulBuilder",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A platonic widget that both has state and calls a closure to obtain its child widget."
  },
  {
    "name": "StatefulWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "Widget"
    ],
    "desc": " A widget that has mutable state."
  },
  {
    "name": "StatelessWidget",
    "path": "/src/widgets/framework.dart",
    "abstract": true,
    "parents": [
      "Widget"
    ],
    "desc": " A widget that does not require mutable state."
  },
  {
    "name": "StatusTransitionWidget",
    "path": "/src/widgets/status_transitions.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that rebuilds when the given animation changes status."
  },
  {
    "name": "Stepper",
    "path": "/src/material/stepper.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A material stepper widget that displays progress through a sequence of steps. Steppers are particularly useful in the case of forms where one step requires the completion of another one, or where multiple steps need to be completed in order to submit the whole form."
  },
  {
    "name": "StreamBuilder",
    "path": "/src/widgets/async.dart",
    "parents": [
      "StreamBuilderBase",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Widget that builds itself based on the latest snapshot of interaction with a [Stream]."
  },
  {
    "name": "StreamBuilderBase",
    "path": "/src/widgets/async.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Base class for widgets that build themselves based on interaction with a specified [Stream]."
  },
  {
    "name": "StretchingOverscrollIndicator",
    "path": "/src/widgets/overscroll_indicator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design visual indication that a scroll view has overscrolled."
  },
  {
    "name": "SubmenuButton",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A menu button that displays a cascading menu."
  },
  {
    "name": "Switch",
    "path": "/src/material/switch.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design switch."
  },
  {
    "name": "SwitchListTile",
    "path": "/src/material/switch_list_tile.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A [ListTile] with a [Switch]. In other words, a switch with a label."
  },
  {
    "name": "SwitchTheme",
    "path": "/src/material/switch_theme.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a switch theme to descendant [Switch] widgets."
  },
  {
    "name": "SystemContextMenu",
    "path": "/src/widgets/system_context_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays the system context menu on top of the Flutter view."
  },
  {
    "name": "Tab",
    "path": "/src/material/tabs.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A Material Design [TabBar] tab."
  },
  {
    "name": "TabBar",
    "path": "/src/material/tabs.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design primary tab bar."
  },
  {
    "name": "TabBarTheme",
    "path": "/src/material/tab_bar_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Defines a theme for [TabBar] widgets."
  },
  {
    "name": "TabBarView",
    "path": "/src/material/tabs.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A page view that displays the widget which corresponds to the currently selected tab."
  },
  {
    "name": "TabPageSelector",
    "path": "/src/material/tabs.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Uses [TabPageSelectorIndicator] to display a row of small circular indicators, one per tab."
  },
  {
    "name": "TabPageSelectorIndicator",
    "path": "/src/material/tabs.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Displays a single circle with the specified size, border style, border color and background colors."
  },
  {
    "name": "Table",
    "path": "/src/widgets/table.dart",
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that uses the table layout algorithm for its children."
  },
  {
    "name": "TableCell",
    "path": "/src/widgets/table.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that controls how a child of a [Table] is aligned."
  },
  {
    "name": "TableRowInkWell",
    "path": "/src/material/data_table.dart",
    "parents": [
      "InkResponse",
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A rectangular area of a Material that responds to touch but clips its ink splashes to the current table row of the nearest table."
  },
  {
    "name": "TapRegion",
    "path": "/src/widgets/tap_region.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that defines a region that can detect taps inside or outside of itself and any group of regions it belongs to, without participating in the [gesture disambiguation](https://flutter.dev/to/gesture-disambiguation) system (other than to consume tap down events if [consumeOutsideTaps] is true)."
  },
  {
    "name": "TapRegionSurface",
    "path": "/src/widgets/tap_region.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that provides notification of a tap inside or outside of a set of registered regions, without participating in the [gesture disambiguation](https://flutter.dev/to/gesture-disambiguation) system."
  },
  {
    "name": "Text",
    "path": "/src/widgets/text.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A run of text with a single style."
  },
  {
    "name": "TextButton",
    "path": "/src/material/text_button.dart",
    "parents": [
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design \"Text Button\"."
  },
  {
    "name": "TextButtonTheme",
    "path": "/src/material/text_button_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Overrides the default [ButtonStyle] of its [TextButton] descendants."
  },
  {
    "name": "TextField",
    "path": "/src/material/text_field.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design text field."
  },
  {
    "name": "TextFieldTapRegion",
    "path": "/src/widgets/tap_region.dart",
    "parents": [
      "TapRegion",
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A [TapRegion] that adds its children to the tap region group for widgets based on the [EditableText] text editing widget, such as [TextField] and [CupertinoTextField]."
  },
  {
    "name": "TextFormField",
    "path": "/src/material/text_form_field.dart",
    "parents": [
      "FormField",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [FormField] that contains a [TextField]."
  },
  {
    "name": "TextMagnifier",
    "path": "/src/material/magnifier.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [Magnifier] positioned by rules dictated by the native Android magnifier."
  },
  {
    "name": "TextSelectionGestureDetector",
    "path": "/src/widgets/text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A gesture detector to respond to non-exclusive event chains for a text field."
  },
  {
    "name": "TextSelectionTheme",
    "path": "/src/material/text_selection_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the appearance of text selection in this widget's subtree."
  },
  {
    "name": "TextSelectionToolbar",
    "path": "/src/material/text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A fully-functional Material-style text selection toolbar."
  },
  {
    "name": "TextSelectionToolbarTextButton",
    "path": "/src/material/text_selection_toolbar_text_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A button styled like a Material native Android text selection menu button."
  },
  {
    "name": "Texture",
    "path": "/src/widgets/texture.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A rectangle upon which a backend texture is mapped."
  },
  {
    "name": "Theme",
    "path": "/src/material/theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Applies a theme to descendant widgets."
  },
  {
    "name": "TickerMode",
    "path": "/src/widgets/ticker_provider.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Enables or disables tickers (and thus animation controllers) in the widget subtree."
  },
  {
    "name": "TimePickerDialog",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design time picker designed to appear inside a popup dialog."
  },
  {
    "name": "TimePickerTheme",
    "path": "/src/material/time_picker_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines the configuration for time pickers displayed using [showTimePicker] in this widget's subtree."
  },
  {
    "name": "Title",
    "path": "/src/widgets/title.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that describes this app in the operating system."
  },
  {
    "name": "ToggleButtons",
    "path": "/src/material/toggle_buttons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A set of toggle buttons."
  },
  {
    "name": "ToggleButtonsTheme",
    "path": "/src/material/toggle_buttons_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " An inherited widget that defines color and border parameters for [ToggleButtons] in this widget's subtree."
  },
  {
    "name": "Tooltip",
    "path": "/src/material/tooltip.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design tooltip."
  },
  {
    "name": "TooltipTheme",
    "path": "/src/material/tooltip_theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Applies a tooltip theme to descendant [Tooltip] widgets."
  },
  {
    "name": "TooltipVisibility",
    "path": "/src/material/tooltip_visibility.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Overrides the visibility of descendant [Tooltip] widgets."
  },
  {
    "name": "Transform",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that applies a transformation before painting its child."
  },
  {
    "name": "TreeSliver",
    "path": "/src/widgets/sliver_tree.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that displays [TreeSliverNode]s that expand and collapse in a vertically and horizontally scrolling [Viewport]."
  },
  {
    "name": "TweenAnimationBuilder",
    "path": "/src/widgets/tween_animation_builder.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " [Widget] builder that animates a property of a [Widget] to a target value whenever the target value changes."
  },
  {
    "name": "TwoDimensionalScrollView",
    "path": "/src/widgets/two_dimensional_scroll_view.dart",
    "abstract": true,
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that combines a [TwoDimensionalScrollable] and a [TwoDimensionalViewport] to create an interactive scrolling pane of content in both vertical and horizontal dimensions."
  },
  {
    "name": "TwoDimensionalScrollable",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that manages scrolling in both the vertical and horizontal dimensions and informs the [TwoDimensionalViewport] through which the content is viewed."
  },
  {
    "name": "TwoDimensionalViewport",
    "path": "/src/widgets/two_dimensional_viewport.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget through which a portion of larger content can be viewed, typically in combination with a [TwoDimensionalScrollable]."
  },
  {
    "name": "UiKitView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "_DarwinView",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Embeds an iOS view in the Widget hierarchy."
  },
  {
    "name": "UnconstrainedBox",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that imposes no constraints on its child, allowing it to render at its \"natural\" size."
  },
  {
    "name": "UndoHistory",
    "path": "/src/widgets/undo_history.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Provides undo/redo capabilities for a [ValueNotifier]."
  },
  {
    "name": "UniqueWidget",
    "path": "/src/widgets/unique_widget.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Base class for stateful widgets that have exactly one inflated instance in the tree."
  },
  {
    "name": "UnmanagedRestorationScope",
    "path": "/src/widgets/restoration.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Inserts a provided [RestorationBucket] into the widget tree and makes it available to descendants via [RestorationScope.of]."
  },
  {
    "name": "UserAccountsDrawerHeader",
    "path": "/src/material/user_accounts_drawer_header.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Material Design [Drawer] header that identifies the app's user."
  },
  {
    "name": "ValueListenableBuilder",
    "path": "/src/widgets/value_listenable_builder.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget whose content stays synced with a [ValueListenable]."
  },
  {
    "name": "VerticalDivider",
    "path": "/src/material/divider.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A thin vertical line, with padding on either side."
  },
  {
    "name": "View",
    "path": "/src/widgets/view.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Bootstraps a render tree that is rendered into the provided [FlutterView]."
  },
  {
    "name": "ViewAnchor",
    "path": "/src/widgets/view.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Decorates a [child] widget with a side [View]."
  },
  {
    "name": "ViewCollection",
    "path": "/src/widgets/view.dart",
    "parents": [
      "_MultiChildComponentWidget",
      "Widget"
    ],
    "desc": " A collection of sibling [View]s."
  },
  {
    "name": "Viewport",
    "path": "/src/widgets/viewport.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget through which a portion of larger content can be viewed, typically in combination with a [Scrollable]."
  },
  {
    "name": "Visibility",
    "path": "/src/widgets/visibility.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Whether to show or hide a child."
  },
  {
    "name": "WidgetInspector",
    "path": "/src/widgets/widget_inspector.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that enables inspecting the child widget's structure."
  },
  {
    "name": "WidgetToRenderBoxAdapter",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " An adapter for placing a specific [RenderBox] in the widget tree."
  },
  {
    "name": "WidgetsApp",
    "path": "/src/widgets/app.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A convenience widget that wraps a number of widgets that are commonly required for an application."
  },
  {
    "name": "WillPopScope",
    "path": "/src/widgets/will_pop_scope.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Registers a callback to veto attempts by the user to dismiss the enclosing [ModalRoute]."
  },
  {
    "name": "Wrap",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that displays its children in multiple horizontal or vertical runs."
  },
  {
    "name": "YearPicker",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A scrollable grid of years to allow picking a year."
  },
  {
    "name": "_AboutProgram",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AccountDetails",
    "path": "/src/material/user_accounts_drawer_header.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AccountPictures",
    "path": "/src/material/user_accounts_drawer_header.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionButton",
    "path": "/src/material/action_buttons.dart",
    "abstract": true,
    "parents": [
      "IconButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionIcon",
    "path": "/src/material/action_buttons.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionSheetActionSection",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionSheetButtonBackground",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionSheetGestureDetector",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionSheetMainSheet",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActionsScope",
    "path": "/src/widgets/actions.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ActiveSearchableBottom",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The bottom of a [CupertinoSliverNavigationBar.search] when the search field is active."
  },
  {
    "name": "_AdaptiveAboutDialog",
    "path": "/src/material/about.dart",
    "parents": [
      "AboutDialog",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AdaptiveAlertDialog",
    "path": "/src/material/dialog.dart",
    "parents": [
      "AlertDialog",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AddIndicator",
    "path": "/src/material/navigation_rail.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " When [addIndicator] is `true`, puts [child] center aligned in a [Stack] with a [NavigationIndicator] behind it, otherwise returns [child]."
  },
  {
    "name": "_AffixText",
    "path": "/src/material/input_decorator.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AlertDialogActionsLayout",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AlertDialogButtonBackground",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AmPmButton",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AndroidPlatformView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AnimatedFadeOutFadeIn",
    "path": "/src/widgets/fade_in_image.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AnimatedScrollView",
    "path": "/src/widgets/animated_scroll_view.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AnimatedSize",
    "path": "/src/widgets/animated_size.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AppBarTitleBox",
    "path": "/src/material/app_bar.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AppKitPlatformView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "_DarwinPlatformView",
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AutoScaleInlineWidget",
    "path": "/src/widgets/widget_span.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AutocompleteField",
    "path": "/src/material/autocomplete.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AutocompleteOptions",
    "path": "/src/material/autocomplete.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AutocompleteOptionsList",
    "path": "/src/material/autocomplete.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_AutofillScope",
    "path": "/src/widgets/autofill.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BackChevron",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BackLabel",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A widget that shows next to the back chevron when `automaticallyImplyLeading` is true."
  },
  {
    "name": "_Badge",
    "path": "/src/material/badge.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Bar",
    "path": "/src/material/bottom_navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BodyBuilder",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BorderContainer",
    "path": "/src/material/input_decorator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BottomNavigationTile",
    "path": "/src/material/bottom_navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BottomSheetGestureDetector",
    "path": "/src/material/bottom_sheet.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_BottomSheetLayoutWithSizeListener",
    "path": "/src/material/bottom_sheet.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ButtonBarRow",
    "path": "/src/material/button_bar.dart",
    "parents": [
      "Flex",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Attempts to display buttons in a row, but displays them in a column if there is not enough horizontal space."
  },
  {
    "name": "_CalendarDateRangePicker",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays a scrollable calendar grid that allows a user to select a range of dates."
  },
  {
    "name": "_CalendarKeyboardNavigator",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CalendarRangePickerDialog",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CancelButton",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The 'Cancel' button next to the search field in a [CupertinoSliverNavigationBar.search]."
  },
  {
    "name": "_CaptureAll",
    "path": "/src/widgets/inherited_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ChildOverflowBox",
    "path": "/src/material/floating_action_button.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ChipRedirectingHitDetectionWidget",
    "path": "/src/material/chip.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Redirects the `buttonRect.dy` passed to [RenderBox.hitTest] to the vertical center of the widget."
  },
  {
    "name": "_ChipRenderWidget",
    "path": "/src/material/chip.dart",
    "parents": [
      "SlottedMultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CompositionCallback",
    "path": "/src/widgets/editable_text.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ContextMenuRouteStatic",
    "path": "/src/cupertino/context_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ContextMenuSheet",
    "path": "/src/cupertino/context_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoAlertActionSection",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoAlertContentSection",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoBackGestureDetector",
    "path": "/src/cupertino/route.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " This is the widget side of [_CupertinoBackGestureController]."
  },
  {
    "name": "_CupertinoDesktopTextSelectionControlsToolbar",
    "path": "/src/cupertino/desktop_text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoDownGestureDetector",
    "path": "/src/cupertino/sheet.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoInspectorButton",
    "path": "/src/cupertino/app.dart",
    "parents": [
      "InspectorButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoPickerSemantics",
    "path": "/src/cupertino/picker.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoSheetScope",
    "path": "/src/cupertino/sheet.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoSliderRenderObjectWidget",
    "path": "/src/cupertino/slider.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoSliverRefresh",
    "path": "/src/cupertino/refresh.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoTextSelectionControlsToolbar",
    "path": "/src/cupertino/text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoTextSelectionToolbarContent",
    "path": "/src/cupertino/text_selection_toolbar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoTextSelectionToolbarItems",
    "path": "/src/cupertino/text_selection_toolbar.dart",
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CupertinoTextSelectionToolbarShape",
    "path": "/src/cupertino/text_selection_toolbar.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_CurvedAnimationBuilder",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Watches [animation] and calls [builder] with the appropriate [Curve] depending on the direction of the [animation] status."
  },
  {
    "name": "_DarwinPlatformView",
    "path": "/src/widgets/platform_view.dart",
    "abstract": true,
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DarwinView",
    "path": "/src/widgets/platform_view.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Common superclass for iOS and macOS platform views."
  },
  {
    "name": "_DatePickerHeader",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Re-usable widget that displays the selected date (in large font) and the help text above it."
  },
  {
    "name": "_DatePickerModeToggleButton",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A button that used to toggle the [DatePickerMode] for a date picker."
  },
  {
    "name": "_Day",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DayHeaders",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DayItem",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DayPeriodControl",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Displays the am/pm fragment and provides controls for switching between am and pm."
  },
  {
    "name": "_DayPeriodInputPadding",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget to pad the area around the [_DayPeriodControl]'s inner [Material]."
  },
  {
    "name": "_DayPicker",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays the days of a given month and allows choosing a day."
  },
  {
    "name": "_Decorator",
    "path": "/src/material/input_decorator.dart",
    "parents": [
      "SlottedMultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DecoyChild",
    "path": "/src/cupertino/context_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DeferredLayout",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DesktopTextSelectionControlsToolbar",
    "path": "/src/material/desktop_text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DestinationLayoutAnimationBuilder",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Determines the appropriate [Curve] and [Animation] to use for laying out the [NavigationDestination], based on [_NavigationDestinationInfo.labelBehavior]."
  },
  {
    "name": "_DetailView",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Dial",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Divider",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DragHandle",
    "path": "/src/material/bottom_sheet.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DragItemProxy",
    "path": "/src/widgets/reorderable_list.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DrawerControllerScope",
    "path": "/src/material/drawer.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DropdownMenu",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DropdownMenuBody",
    "path": "/src/material/dropdown_menu.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DropdownMenuItemButton",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DropdownMenuItemContainer",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_DropdownRoutePage",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Editable",
    "path": "/src/widgets/editable_text.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_EffectiveTickerMode",
    "path": "/src/widgets/ticker_provider.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ElevatedButtonWithIcon",
    "path": "/src/material/elevated_button.dart",
    "parents": [
      "ElevatedButton",
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ElevatedButtonWithIconChild",
    "path": "/src/material/elevated_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ExclusiveMouseRegion",
    "path": "/src/material/tooltip.dart",
    "parents": [
      "MouseRegion",
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A special [MouseRegion] that when nested, only the first [_ExclusiveMouseRegion] to be hit in hit-testing order will be added to the BoxHitTestResult (i.e., child over parent, last sibling over first sibling)."
  },
  {
    "name": "_ExpandedTitleWithPadding",
    "path": "/src/material/app_bar.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ExtendedNavigationRailAnimation",
    "path": "/src/material/navigation_rail.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FadeForwardsPageTransition",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FadeUpwardsPageTransition",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FilledButtonWithIcon",
    "path": "/src/material/filled_button.dart",
    "parents": [
      "FilledButton",
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FilledButtonWithIconChild",
    "path": "/src/material/filled_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FixedExtentScrollable",
    "path": "/src/widgets/list_wheel_scroll_view.dart",
    "parents": [
      "Scrollable",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A [Scrollable] which must be given its viewport children's item extent size so it can pass it on ultimately to the [FixedExtentScrollController]."
  },
  {
    "name": "_FixedSizeSlidingTransition",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FlexibleSpaceHeaderOpacity",
    "path": "/src/material/flexible_space_bar.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FloatingActionButtonTransition",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Handler for scale and rotation animations in the [FloatingActionButton]."
  },
  {
    "name": "_FloatingHeader",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FocusInheritedScope",
    "path": "/src/widgets/focus_scope.dart",
    "parents": [
      "InheritedNotifier",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FocusScopeWithExternalFocusNode",
    "path": "/src/widgets/focus_scope.dart",
    "parents": [
      "FocusScope",
      "Focus",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FocusWithExternalFocusNode",
    "path": "/src/widgets/focus_scope.dart",
    "parents": [
      "Focus",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_FocusedDate",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " InheritedWidget indicating what the current focused date is for its children."
  },
  {
    "name": "_FocusedDate",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " InheritedWidget indicating what the current focused date is for its children."
  },
  {
    "name": "_FormScope",
    "path": "/src/widgets/form.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_GestureSemantics",
    "path": "/src/widgets/gesture_detector.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_HelperError",
    "path": "/src/material/input_decorator.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_HorizontalInnerDimension",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "Scrollable",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_HourControl",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Displays the hour fragment."
  },
  {
    "name": "_HourMinuteControl",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_HourMinuteTextField",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_HourTextField",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_IconButtonM3",
    "path": "/src/material/icon_button.dart",
    "parents": [
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_IgnorePointerWithSemantics",
    "path": "/src/widgets/semantics_debugger.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget ignores pointer event but still keeps semantics actions."
  },
  {
    "name": "_InactiveSearchableBottom",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The bottom of a [CupertinoSliverNavigationBar.search] when the search field is inactive."
  },
  {
    "name": "_IndicatorInkWell",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "InkResponse",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_IndicatorInkWell",
    "path": "/src/material/navigation_rail.dart",
    "parents": [
      "InkResponse",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InheritedNestedScrollView",
    "path": "/src/widgets/nested_scroll_view.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InheritedResetNotifier",
    "path": "/src/widgets/draggable_scrollable_sheet.dart",
    "parents": [
      "InheritedNotifier",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InheritedTheme",
    "path": "/src/material/theme.dart",
    "parents": [
      "InheritedTheme",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InkFeatures",
    "path": "/src/material/material.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InkResponseStateWidget",
    "path": "/src/material/ink_well.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InputDateRangePicker",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Provides a pair of text fields that allow the user to enter the start and end dates that represent a range of dates."
  },
  {
    "name": "_InputDateRangePickerDialog",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InputPadding",
    "path": "/src/material/toggle_buttons.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget to pad the area around a [ToggleButtons]'s children."
  },
  {
    "name": "_InputPadding",
    "path": "/src/material/button.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget to pad the area around a [MaterialButton]'s inner [Material]."
  },
  {
    "name": "_InputPadding",
    "path": "/src/material/button_style_button.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget to pad the area around a [ButtonStyleButton]'s inner [Material]."
  },
  {
    "name": "_InspectorOverlay",
    "path": "/src/widgets/widget_inspector.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_InteractiveViewerBuilt",
    "path": "/src/widgets/interactive_viewer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_IntrinsicHorizontalStadium",
    "path": "/src/material/badge.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget size itself to the smallest horizontal stadium rect that can still fit the child's intrinsic size."
  },
  {
    "name": "_Label",
    "path": "/src/material/bottom_navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_LargeTitle",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " The large title of the navigation bar."
  },
  {
    "name": "_ListTile",
    "path": "/src/material/list_tile.dart",
    "parents": [
      "SlottedMultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_LocalizationsScope",
    "path": "/src/widgets/localizations.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Magnifier",
    "path": "/src/widgets/magnifier.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MasterDetailFlow",
    "path": "/src/material/about.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Master Detail Flow widget. Depending on screen width it builds either a lateral or nested navigation flow between a master view and a detail page."
  },
  {
    "name": "_MasterDetailScaffold",
    "path": "/src/material/about.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MasterPage",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MaterialInspectorButton",
    "path": "/src/material/app.dart",
    "parents": [
      "InspectorButton",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MaterialInterior",
    "path": "/src/material/material.dart",
    "parents": [
      "ImplicitlyAnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " The interior of non-transparent material."
  },
  {
    "name": "_MaterialScrollbar",
    "path": "/src/material/scrollbar.dart",
    "parents": [
      "RawScrollbar",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MaterialSwitch",
    "path": "/src/material/switch.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MediaQueryFromView",
    "path": "/src/widgets/media_query.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MenuAnchorScope",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MenuBarAnchor",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "MenuAnchor",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " MenuBar-specific private specialization of [MenuAnchor] so that it can act differently in regards to orientation, how open works, and what gets built."
  },
  {
    "name": "_MenuControllerScope",
    "path": "/src/widgets/raw_menu_anchor.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MenuItem",
    "path": "/src/material/dropdown.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MenuItem",
    "path": "/src/material/popup_menu.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MenuItemLabel",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A label widget that is used as the label for a [MenuItemButton] or [SubmenuButton]."
  },
  {
    "name": "_MenuPanel",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget that manages a list of menu buttons in a menu."
  },
  {
    "name": "_MergeableMaterialListBody",
    "path": "/src/material/mergeable_material.dart",
    "parents": [
      "ListBody",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MinuteControl",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Displays the minute fragment."
  },
  {
    "name": "_MinuteTextField",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ModalBarrierGestureDetector",
    "path": "/src/widgets/modal_barrier.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ModalBottomSheet",
    "path": "/src/material/bottom_sheet.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ModalScope",
    "path": "/src/widgets/routes.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ModalScopeStatus",
    "path": "/src/widgets/routes.dart",
    "parents": [
      "InheritedModel",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MonthItem",
    "path": "/src/material/date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Displays the days of a given month and allows choosing a date range."
  },
  {
    "name": "_MonthPicker",
    "path": "/src/material/calendar_date_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_MultiChildComponentWidget",
    "path": "/src/widgets/view.dart",
    "parents": [
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NavigationBarDestinationLayout",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Widget that handles the layout of the icon + label in a navigation bar destination, based on [_NavigationDestinationInfo.labelBehavior] and [_NavigationDestinationInfo.selectedAnimation]."
  },
  {
    "name": "_NavigationBarDestinationSemantics",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Semantics widget for a navigation bar destination."
  },
  {
    "name": "_NavigationBarDestinationTooltip",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Tooltip widget for use in a [NavigationBar]."
  },
  {
    "name": "_NavigationBarSearchField",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The search field used in the expanded state of a [CupertinoSliverNavigationBar.search]."
  },
  {
    "name": "_NavigationBarTransition",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " This class represents the widget that will be in the Hero flight instead of the 2 static navigation bars by taking inner components from both."
  },
  {
    "name": "_NavigationDestinationBuilder",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Widget that handles the semantics and layout of a navigation bar destination."
  },
  {
    "name": "_NavigationDestinationBuilder",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Widget that handles the semantics and layout of a navigation drawer destination."
  },
  {
    "name": "_NavigationDestinationInfo",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Inherited widget for passing data from the [NavigationBar] to the [NavigationBar.destinations] children widgets."
  },
  {
    "name": "_NavigationDestinationSemantics",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Semantics widget for a navigation drawer destination."
  },
  {
    "name": "_NavigationDrawerDestinationInfo",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Inherited widget for passing data from the [NavigationDrawer] to the [NavigationDrawerDestination] child widgets."
  },
  {
    "name": "_NestedScrollViewCustomScrollView",
    "path": "/src/widgets/nested_scroll_view.dart",
    "parents": [
      "CustomScrollView",
      "ScrollView",
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NullWidget",
    "path": "/src/widgets/default_selection_style.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NullWidget",
    "path": "/src/widgets/framework.dart",
    "parents": [
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NullWidget",
    "path": "/src/material/text_selection_theme.dart",
    "parents": [
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NullWidget",
    "path": "/src/widgets/automatic_keep_alive.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NullWidget",
    "path": "/src/widgets/text.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_NullWidget",
    "path": "/src/material/data_table.dart",
    "parents": [
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OpenUpwardsPageTransition",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OutlinedButtonWithIcon",
    "path": "/src/material/outlined_button.dart",
    "parents": [
      "OutlinedButton",
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OutlinedButtonWithIconChild",
    "path": "/src/material/outlined_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OverlayChildLayoutBuilder",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "AbstractLayoutBuilder",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OverlayEntryWidget",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OverlayPortal",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_OverscrollBackground",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PackageLicensePage",
    "path": "/src/material/about.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PackageLicensePageTitle",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PackageListTile",
    "path": "/src/material/about.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PackagesView",
    "path": "/src/material/about.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PageTransitionsThemeTransitions",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ParentInkResponseProvider",
    "path": "/src/material/ink_well.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PersistentNavigationBar",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The top part of the navigation bar that's never scrolled away."
  },
  {
    "name": "_PipelineOwnerScope",
    "path": "/src/widgets/view.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PlatformLayerBasedAndroidViewSurface",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "PlatformViewSurface",
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PlatformViewPlaceHolder",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " When a platform view is in the widget hierarchy, this widget is used to capture the size of the platform view after the first layout. This placeholder is basically a [SizedBox.expand] with a [onLayout] callback to notify the size of the render object to its parent."
  },
  {
    "name": "_PopupMenu",
    "path": "/src/material/popup_menu.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PredictiveBackGestureDetector",
    "path": "/src/material/predictive_back_page_transitions_builder.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_PredictiveBackPageTransition",
    "path": "/src/material/predictive_back_page_transitions_builder.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " Android's predictive back page transition."
  },
  {
    "name": "_PriorityColumn",
    "path": "/src/cupertino/dialog.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_RailDestination",
    "path": "/src/material/navigation_rail.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_RangeSliderRenderObjectWidget",
    "path": "/src/material/range_slider.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_RawIndexedStack",
    "path": "/src/widgets/basic.dart",
    "parents": [
      "Stack",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " The render object widget that backs [IndexedStack]."
  },
  {
    "name": "_RawViewInternal",
    "path": "/src/widgets/view.dart",
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " The workhorse behind the [RawView] widget that actually bootstraps a render tree."
  },
  {
    "name": "_RenderTheaterMarker",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ReorderableItem",
    "path": "/src/widgets/reorderable_list.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_RichText",
    "path": "/src/widgets/text.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_RouterScope",
    "path": "/src/widgets/router.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScaffoldMessengerScope",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScaffoldScope",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScribbleFocusable",
    "path": "/src/widgets/editable_text.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScrollNotificationObserverScope",
    "path": "/src/widgets/scroll_notification_observer.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScrollSemantics",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " With [_ScrollSemantics] certain child [SemanticsNode]s can be excluded from the scrollable area for semantics purposes."
  },
  {
    "name": "_ScrollUnderFlexibleSpace",
    "path": "/src/material/app_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScrollableScope",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ScrollableSelectionHandler",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget to handle selection for a scrollable."
  },
  {
    "name": "_SearchAnchorWithSearchBar",
    "path": "/src/material/search_anchor.dart",
    "parents": [
      "SearchAnchor",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SearchPage",
    "path": "/src/material/search.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Segment",
    "path": "/src/cupertino/sliding_segmented_control.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SegmentSeparator",
    "path": "/src/cupertino/sliding_segmented_control.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SegmentedButtonRenderWidget",
    "path": "/src/material/segmented_button.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SegmentedControlRenderWidget",
    "path": "/src/cupertino/sliding_segmented_control.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SegmentedControlRenderWidget",
    "path": "/src/cupertino/segmented_control.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectToggleButton",
    "path": "/src/material/toggle_buttons.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectableAnimatedBuilder",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectableAnimatedBuilder",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectableIconButton",
    "path": "/src/material/icon_button.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectableTextContainer",
    "path": "/src/widgets/text.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectionHandleOverlay",
    "path": "/src/widgets/text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " This widget represents a single draggable selection handle."
  },
  {
    "name": "_SelectionKeepAlive",
    "path": "/src/widgets/scroll_delegate.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SelectionToolbarWrapper",
    "path": "/src/widgets/text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SemanticsClipper",
    "path": "/src/widgets/modal_barrier.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A widget that modifies the size of the [SemanticsNode.rect] created by its child widget."
  },
  {
    "name": "_ShapeBorderPaint",
    "path": "/src/material/material.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SharedAppModel",
    "path": "/src/widgets/shared_app_data.dart",
    "parents": [
      "InheritedModel",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ShortcutRegistrarScope",
    "path": "/src/widgets/shortcuts.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SingleChildViewport",
    "path": "/src/widgets/single_child_scroll_view.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliderRenderObjectWidget",
    "path": "/src/material/slider.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverAnimatedMultiBoxAdaptor",
    "path": "/src/widgets/animated_scroll_view.dart",
    "abstract": true,
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverConstrainedCrossAxis",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFillRemainingAndOverscroll",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFillRemainingWithScrollable",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFillRemainingWithoutScrollable",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFillViewportRenderObjectWidget",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFixedExtentCarousel",
    "path": "/src/material/carousel.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that displays its box children in a linear array with a fixed extent per item."
  },
  {
    "name": "_SliverFloatingHeader",
    "path": "/src/widgets/sliver_floating_header.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFloatingPersistentHeader",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "parents": [
      "_SliverPersistentHeaderRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFloatingPinnedPersistentHeader",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "parents": [
      "_SliverPersistentHeaderRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverFractionalPadding",
    "path": "/src/widgets/sliver_fill.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverPersistentHeaderRenderObjectWidget",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "abstract": true,
    "parents": [
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverPinnedPersistentHeader",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "parents": [
      "_SliverPersistentHeaderRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverResizingHeader",
    "path": "/src/widgets/sliver_resizing_header.dart",
    "parents": [
      "SlottedMultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverScrollingPersistentHeader",
    "path": "/src/widgets/sliver_persistent_header.dart",
    "parents": [
      "_SliverPersistentHeaderRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverTree",
    "path": "/src/widgets/sliver_tree.dart",
    "parents": [
      "SliverVariedExtentList",
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverVisibility",
    "path": "/src/widgets/visibility.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SliverWeightedCarousel",
    "path": "/src/material/carousel.dart",
    "parents": [
      "SliverMultiBoxAdaptorWidget",
      "SliverWithKeepAliveWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " A sliver that arranges its box children in a linear array, constraining them to specific weights determined by the [weights] property."
  },
  {
    "name": "_SliverZeroFlexParentDataWidget",
    "path": "/src/widgets/sliver.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SnapTrigger",
    "path": "/src/widgets/sliver_floating_header.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SortArrow",
    "path": "/src/material/data_table.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_SpellCheckSuggestionsToolbarContainer",
    "path": "/src/material/spell_check_suggestions_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " The Material-styled toolbar outline for the spell check suggestions toolbar."
  },
  {
    "name": "_StandardBottomSheet",
    "path": "/src/material/scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_StatusTransitionWidgetBuilder",
    "path": "/src/material/navigation_bar.dart",
    "parents": [
      "StatusTransitionWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Widget that listens to an animation, and rebuilds when the animation changes [AnimationStatus]."
  },
  {
    "name": "_StatusTransitionWidgetBuilder",
    "path": "/src/material/navigation_drawer.dart",
    "parents": [
      "StatusTransitionWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": " Widget that listens to an animation, and rebuilds when the animation changes [AnimationStatus]."
  },
  {
    "name": "_Submenu",
    "path": "/src/material/menu_anchor.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TabControllerScope",
    "path": "/src/material/tab_controller.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TabLabelBar",
    "path": "/src/material/tabs.dart",
    "parents": [
      "Flex",
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TabStyle",
    "path": "/src/material/tabs.dart",
    "parents": [
      "AnimatedWidget",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TabSwitchingView",
    "path": "/src/cupertino/tab_scaffold.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A widget laying out multiple tabs with only one active tab being built at a time and on stage. Off stage tabs' animations are stopped."
  },
  {
    "name": "_TableCell",
    "path": "/src/widgets/table.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextButtonWithIcon",
    "path": "/src/material/text_button.dart",
    "parents": [
      "TextButton",
      "ButtonStyleButton",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextButtonWithIconChild",
    "path": "/src/material/text_button.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextSelectionControlsToolbar",
    "path": "/src/material/text_selection.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextSelectionToolbarContainer",
    "path": "/src/material/text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextSelectionToolbarItemsLayout",
    "path": "/src/material/text_selection_toolbar.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextSelectionToolbarOverflowButton",
    "path": "/src/material/text_selection_toolbar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextSelectionToolbarOverflowable",
    "path": "/src/material/text_selection_toolbar.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextSelectionToolbarTrailingEdgeAlign",
    "path": "/src/material/text_selection_toolbar.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TextureBasedAndroidViewSurface",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "PlatformViewSurface",
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Theater",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "MultiChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": " Special version of a [Stack], that doesn't layout and render the first [skipCount] children."
  },
  {
    "name": "_Tile",
    "path": "/src/material/bottom_navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TileIcon",
    "path": "/src/material/bottom_navigation_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TimePicker",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": " A Time Picker widget that can be embedded into another widget."
  },
  {
    "name": "_TimePickerHeader",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TimePickerInput",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TimePickerModel",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "InheritedModel",
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TimeSelectorSeparator",
    "path": "/src/material/time_picker.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " A passive fragment showing a string value."
  },
  {
    "name": "_TooltipOverlay",
    "path": "/src/material/tooltip.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TooltipVisibilityScope",
    "path": "/src/material/tooltip_visibility.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TransitionableNavigationBar",
    "path": "/src/cupertino/nav_bar.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": " This should always be the first child of Hero widgets."
  },
  {
    "name": "_TreeNodeParentDataWidget",
    "path": "/src/widgets/sliver_tree.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_TwoDimensionalScrollableScope",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_UbiquitousInheritedWidget",
    "path": "/src/widgets/basic.dart",
    "abstract": true,
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " See also:"
  },
  {
    "name": "_UiKitPlatformView",
    "path": "/src/widgets/platform_view.dart",
    "parents": [
      "_DarwinPlatformView",
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ValueIndicatorRenderObjectWidget",
    "path": "/src/material/range_slider.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ValueIndicatorRenderObjectWidget",
    "path": "/src/material/slider.dart",
    "parents": [
      "LeafRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_VerticalOuterDimension",
    "path": "/src/widgets/scrollable.dart",
    "parents": [
      "Scrollable",
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ViewContent",
    "path": "/src/material/search_anchor.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ViewScope",
    "path": "/src/widgets/view.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_Visibility",
    "path": "/src/widgets/visibility.dart",
    "parents": [
      "SingleChildRenderObjectWidget",
      "RenderObjectWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_VisibilityScope",
    "path": "/src/widgets/visibility.dart",
    "parents": [
      "InheritedWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": " Inherited widget that allows descendants to find their visibility status."
  },
  {
    "name": "_WidgetForTypeTests",
    "path": "/src/widgets/widget_inspector.dart",
    "parents": [
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_WidgetInspectorButton",
    "path": "/src/widgets/widget_inspector.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_WidgetInspectorButtonGroup",
    "path": "/src/widgets/widget_inspector.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_WidgetSpanParentData",
    "path": "/src/widgets/widget_span.dart",
    "parents": [
      "ParentDataWidget",
      "ProxyWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_WrappingOverlay",
    "path": "/src/widgets/overlay.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ZoomEnterTransition",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ZoomEnterTransitionNoCache",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ZoomExitTransition",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatefulWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ZoomExitTransitionNoCache",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ZoomPageTransition",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  },
  {
    "name": "_ZoomPageTransitionNoCache",
    "path": "/src/material/page_transitions_theme.dart",
    "parents": [
      "StatelessWidget",
      "Widget"
    ],
    "desc": ""
  }
]